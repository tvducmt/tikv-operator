---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: tikvclusters.tikv.org
spec:
  group: tikv.org
  names:
    kind: TikvCluster
    listKind: TikvClusterList
    plural: tikvclusters
    singular: tikvcluster
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: TikvCluster is the control script's spec
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the behavior of a tikv cluster
            properties:
              affinity:
                description: Affinity of TiDB cluster Pods
                properties:
                  nodeAffinity:
                    description: Describes node affinity scheduling rules for the
                      pod.
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: The scheduler will prefer to schedule pods to
                          nodes that satisfy the affinity expressions specified by
                          this field, but it may choose a node that violates one or
                          more of the expressions. The node that is most preferred
                          is the one with the greatest sum of weights, i.e. for each
                          node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling affinity expressions,
                          etc.), compute a sum by iterating through the elements of
                          this field and adding "weight" to the sum if the node matches
                          the corresponding matchExpressions; the node(s) with the
                          highest sum are the most preferred.
                        items:
                          description: An empty preferred scheduling term matches
                            all objects with implicit weight 0 (i.e. it's a no-op).
                            A null preferred scheduling term matches no objects (i.e.
                            is also a no-op).
                          properties:
                            preference:
                              description: A node selector term, associated with the
                                corresponding weight.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                              type: object
                            weight:
                              description: Weight associated with matching the corresponding
                                nodeSelectorTerm, in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - preference
                          - weight
                          type: object
                        type: array
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: If the affinity requirements specified by this
                          field are not met at scheduling time, the pod will not be
                          scheduled onto the node. If the affinity requirements specified
                          by this field cease to be met at some point during pod execution
                          (e.g. due to an update), the system may or may not try to
                          eventually evict the pod from its node.
                        properties:
                          nodeSelectorTerms:
                            description: Required. A list of node selector terms.
                              The terms are ORed.
                            items:
                              description: A null or empty node selector term matches
                                no objects. The requirements of them are ANDed. The
                                TopologySelectorTerm type implements a subset of the
                                NodeSelectorTerm.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                              type: object
                            type: array
                        required:
                        - nodeSelectorTerms
                        type: object
                    type: object
                  podAffinity:
                    description: Describes pod affinity scheduling rules (e.g. co-locate
                      this pod in the same node, zone, etc. as some other pod(s)).
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: The scheduler will prefer to schedule pods to
                          nodes that satisfy the affinity expressions specified by
                          this field, but it may choose a node that violates one or
                          more of the expressions. The node that is most preferred
                          is the one with the greatest sum of weights, i.e. for each
                          node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling affinity expressions,
                          etc.), compute a sum by iterating through the elements of
                          this field and adding "weight" to the sum if the node has
                          pods which matches the corresponding podAffinityTerm; the
                          node(s) with the highest sum are the most preferred.
                        items:
                          description: The weights of all of the matched WeightedPodAffinityTerm
                            fields are added per-node to find the most preferred node(s)
                          properties:
                            podAffinityTerm:
                              description: Required. A pod affinity term, associated
                                with the corresponding weight.
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources,
                                    in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                namespaces:
                                  description: namespaces specifies which namespaces
                                    the labelSelector applies to (matches against);
                                    null or empty list means "this pod's namespace"
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods
                                    matching the labelSelector in the specified namespaces,
                                    where co-located is defined as running on a node
                                    whose value of the label with key topologyKey
                                    matches that of any node on which any of the selected
                                    pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            weight:
                              description: weight associated with matching the corresponding
                                podAffinityTerm, in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - podAffinityTerm
                          - weight
                          type: object
                        type: array
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: If the affinity requirements specified by this
                          field are not met at scheduling time, the pod will not be
                          scheduled onto the node. If the affinity requirements specified
                          by this field cease to be met at some point during pod execution
                          (e.g. due to a pod label update), the system may or may
                          not try to eventually evict the pod from its node. When
                          there are multiple elements, the lists of nodes corresponding
                          to each podAffinityTerm are intersected, i.e. all terms
                          must be satisfied.
                        items:
                          description: Defines a set of pods (namely those matching
                            the labelSelector relative to the given namespace(s))
                            that this pod should be co-located (affinity) or not co-located
                            (anti-affinity) with, where co-located is defined as running
                            on a node whose value of the label with key <topologyKey>
                            matches that of any node on which a pod of the set of
                            pods is running
                          properties:
                            labelSelector:
                              description: A label query over a set of resources,
                                in this case pods.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                            namespaces:
                              description: namespaces specifies which namespaces the
                                labelSelector applies to (matches against); null or
                                empty list means "this pod's namespace"
                              items:
                                type: string
                              type: array
                            topologyKey:
                              description: This pod should be co-located (affinity)
                                or not co-located (anti-affinity) with the pods matching
                                the labelSelector in the specified namespaces, where
                                co-located is defined as running on a node whose value
                                of the label with key topologyKey matches that of
                                any node on which any of the selected pods is running.
                                Empty topologyKey is not allowed.
                              type: string
                          required:
                          - topologyKey
                          type: object
                        type: array
                    type: object
                  podAntiAffinity:
                    description: Describes pod anti-affinity scheduling rules (e.g.
                      avoid putting this pod in the same node, zone, etc. as some
                      other pod(s)).
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: The scheduler will prefer to schedule pods to
                          nodes that satisfy the anti-affinity expressions specified
                          by this field, but it may choose a node that violates one
                          or more of the expressions. The node that is most preferred
                          is the one with the greatest sum of weights, i.e. for each
                          node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling anti-affinity expressions,
                          etc.), compute a sum by iterating through the elements of
                          this field and adding "weight" to the sum if the node has
                          pods which matches the corresponding podAffinityTerm; the
                          node(s) with the highest sum are the most preferred.
                        items:
                          description: The weights of all of the matched WeightedPodAffinityTerm
                            fields are added per-node to find the most preferred node(s)
                          properties:
                            podAffinityTerm:
                              description: Required. A pod affinity term, associated
                                with the corresponding weight.
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources,
                                    in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                namespaces:
                                  description: namespaces specifies which namespaces
                                    the labelSelector applies to (matches against);
                                    null or empty list means "this pod's namespace"
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods
                                    matching the labelSelector in the specified namespaces,
                                    where co-located is defined as running on a node
                                    whose value of the label with key topologyKey
                                    matches that of any node on which any of the selected
                                    pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            weight:
                              description: weight associated with matching the corresponding
                                podAffinityTerm, in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - podAffinityTerm
                          - weight
                          type: object
                        type: array
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: If the anti-affinity requirements specified by
                          this field are not met at scheduling time, the pod will
                          not be scheduled onto the node. If the anti-affinity requirements
                          specified by this field cease to be met at some point during
                          pod execution (e.g. due to a pod label update), the system
                          may or may not try to eventually evict the pod from its
                          node. When there are multiple elements, the lists of nodes
                          corresponding to each podAffinityTerm are intersected, i.e.
                          all terms must be satisfied.
                        items:
                          description: Defines a set of pods (namely those matching
                            the labelSelector relative to the given namespace(s))
                            that this pod should be co-located (affinity) or not co-located
                            (anti-affinity) with, where co-located is defined as running
                            on a node whose value of the label with key <topologyKey>
                            matches that of any node on which a pod of the set of
                            pods is running
                          properties:
                            labelSelector:
                              description: A label query over a set of resources,
                                in this case pods.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                            namespaces:
                              description: namespaces specifies which namespaces the
                                labelSelector applies to (matches against); null or
                                empty list means "this pod's namespace"
                              items:
                                type: string
                              type: array
                            topologyKey:
                              description: This pod should be co-located (affinity)
                                or not co-located (anti-affinity) with the pods matching
                                the labelSelector in the specified namespaces, where
                                co-located is defined as running on a node whose value
                                of the label with key topologyKey matches that of
                                any node on which any of the selected pods is running.
                                Empty topologyKey is not allowed.
                              type: string
                          required:
                          - topologyKey
                          type: object
                        type: array
                    type: object
                type: object
              annotations:
                additionalProperties:
                  type: string
                description: Base annotations of TiDB cluster Pods, components may
                  add or override selectors upon this respectively
                type: object
              configUpdateStrategy:
                default: InPlacne
                description: ConfigUpdateStrategy determines how the configuration
                  change is applied to the cluster. UpdateStrategyInPlace will update
                  the ConfigMap of configuration in-place and an extra rolling-update
                  of the cluster component is needed to reload the configuration change.
                  UpdateStrategyRollingUpdate will create a new ConfigMap with the
                  new configuration and rolling-update the related components to use
                  the new ConfigMap, that is, the new configuration will be applied
                  automatically.
                enum:
                - InPlace,RollingUpdate
                type: string
              discovery:
                description: Discovery spec
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                    type: object
                type: object
              hostNetwork:
                description: 'Whether Hostnetwork is enabled for TiDB cluster Pods
                  Optional: Defaults to false'
                type: boolean
              imagePullPolicy:
                default: IfNotPresent
                description: ImagePullPolicy of TiDB cluster Pods
                type: string
              listenersConfig:
                description: ListenersConfig defines the Kafka listener types
                properties:
                  externalListeners:
                    items:
                      description: ExternalListenerConfig defines the external listener
                        config
                      properties:
                        accessMethod:
                          description: Service Type string describes ingress methods
                            for a service
                          type: string
                        containerPort:
                          format: int32
                          type: integer
                        externalStartingPort:
                          format: int32
                          type: integer
                        name:
                          type: string
                        type:
                          description: 'SecurityProtocol is the protocol used to communicate
                            with brokers. Valid values are: plaintext, ssl, sasl_plaintext,
                            sasl_ssl.'
                          type: string
                      required:
                      - containerPort
                      - externalStartingPort
                      - name
                      - type
                      type: object
                    type: array
                  serviceAnnotations:
                    additionalProperties:
                      type: string
                    type: object
                type: object
              nodeSelector:
                additionalProperties:
                  type: string
                description: Base node selectors of TiDB cluster Pods, components
                  may add or override selectors upon this respectively
                type: object
              paused:
                description: Indicates that the tikv cluster is paused and will not
                  be processed by the controller.
                type: boolean
              pd:
                description: PD cluster spec
                properties:
                  affinity:
                    description: 'Affinity of the component. Override the cluster-level
                      one if present Optional: Defaults to cluster-level setting'
                    properties:
                      nodeAffinity:
                        description: Describes node affinity scheduling rules for
                          the pod.
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the affinity expressions specified
                              by this field, but it may choose a node that violates
                              one or more of the expressions. The node that is most
                              preferred is the one with the greatest sum of weights,
                              i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node matches the corresponding matchExpressions;
                              the node(s) with the highest sum are the most preferred.
                            items:
                              description: An empty preferred scheduling term matches
                                all objects with implicit weight 0 (i.e. it's a no-op).
                                A null preferred scheduling term matches no objects
                                (i.e. is also a no-op).
                              properties:
                                preference:
                                  description: A node selector term, associated with
                                    the corresponding weight.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                weight:
                                  description: Weight associated with matching the
                                    corresponding nodeSelectorTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - preference
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the affinity requirements specified by
                              this field are not met at scheduling time, the pod will
                              not be scheduled onto the node. If the affinity requirements
                              specified by this field cease to be met at some point
                              during pod execution (e.g. due to an update), the system
                              may or may not try to eventually evict the pod from
                              its node.
                            properties:
                              nodeSelectorTerms:
                                description: Required. A list of node selector terms.
                                  The terms are ORed.
                                items:
                                  description: A null or empty node selector term
                                    matches no objects. The requirements of them are
                                    ANDed. The TopologySelectorTerm type implements
                                    a subset of the NodeSelectorTerm.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            required:
                            - nodeSelectorTerms
                            type: object
                        type: object
                      podAffinity:
                        description: Describes pod affinity scheduling rules (e.g.
                          co-locate this pod in the same node, zone, etc. as some
                          other pod(s)).
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the affinity expressions specified
                              by this field, but it may choose a node that violates
                              one or more of the expressions. The node that is most
                              preferred is the one with the greatest sum of weights,
                              i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node has pods which matches the corresponding
                              podAffinityTerm; the node(s) with the highest sum are
                              the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm
                                fields are added per-node to find the most preferred
                                node(s)
                              properties:
                                podAffinityTerm:
                                  description: Required. A pod affinity term, associated
                                    with the corresponding weight.
                                  properties:
                                    labelSelector:
                                      description: A label query over a set of resources,
                                        in this case pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                    namespaces:
                                      description: namespaces specifies which namespaces
                                        the labelSelector applies to (matches against);
                                        null or empty list means "this pod's namespace"
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity)
                                        or not co-located (anti-affinity) with the
                                        pods matching the labelSelector in the specified
                                        namespaces, where co-located is defined as
                                        running on a node whose value of the label
                                        with key topologyKey matches that of any node
                                        on which any of the selected pods is running.
                                        Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                weight:
                                  description: weight associated with matching the
                                    corresponding podAffinityTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - podAffinityTerm
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the affinity requirements specified by
                              this field are not met at scheduling time, the pod will
                              not be scheduled onto the node. If the affinity requirements
                              specified by this field cease to be met at some point
                              during pod execution (e.g. due to a pod label update),
                              the system may or may not try to eventually evict the
                              pod from its node. When there are multiple elements,
                              the lists of nodes corresponding to each podAffinityTerm
                              are intersected, i.e. all terms must be satisfied.
                            items:
                              description: Defines a set of pods (namely those matching
                                the labelSelector relative to the given namespace(s))
                                that this pod should be co-located (affinity) or not
                                co-located (anti-affinity) with, where co-located
                                is defined as running on a node whose value of the
                                label with key <topologyKey> matches that of any node
                                on which a pod of the set of pods is running
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources,
                                    in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                namespaces:
                                  description: namespaces specifies which namespaces
                                    the labelSelector applies to (matches against);
                                    null or empty list means "this pod's namespace"
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods
                                    matching the labelSelector in the specified namespaces,
                                    where co-located is defined as running on a node
                                    whose value of the label with key topologyKey
                                    matches that of any node on which any of the selected
                                    pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            type: array
                        type: object
                      podAntiAffinity:
                        description: Describes pod anti-affinity scheduling rules
                          (e.g. avoid putting this pod in the same node, zone, etc.
                          as some other pod(s)).
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the anti-affinity expressions
                              specified by this field, but it may choose a node that
                              violates one or more of the expressions. The node that
                              is most preferred is the one with the greatest sum of
                              weights, i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              anti-affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node has pods which matches the corresponding
                              podAffinityTerm; the node(s) with the highest sum are
                              the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm
                                fields are added per-node to find the most preferred
                                node(s)
                              properties:
                                podAffinityTerm:
                                  description: Required. A pod affinity term, associated
                                    with the corresponding weight.
                                  properties:
                                    labelSelector:
                                      description: A label query over a set of resources,
                                        in this case pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                    namespaces:
                                      description: namespaces specifies which namespaces
                                        the labelSelector applies to (matches against);
                                        null or empty list means "this pod's namespace"
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity)
                                        or not co-located (anti-affinity) with the
                                        pods matching the labelSelector in the specified
                                        namespaces, where co-located is defined as
                                        running on a node whose value of the label
                                        with key topologyKey matches that of any node
                                        on which any of the selected pods is running.
                                        Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                weight:
                                  description: weight associated with matching the
                                    corresponding podAffinityTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - podAffinityTerm
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the anti-affinity requirements specified
                              by this field are not met at scheduling time, the pod
                              will not be scheduled onto the node. If the anti-affinity
                              requirements specified by this field cease to be met
                              at some point during pod execution (e.g. due to a pod
                              label update), the system may or may not try to eventually
                              evict the pod from its node. When there are multiple
                              elements, the lists of nodes corresponding to each podAffinityTerm
                              are intersected, i.e. all terms must be satisfied.
                            items:
                              description: Defines a set of pods (namely those matching
                                the labelSelector relative to the given namespace(s))
                                that this pod should be co-located (affinity) or not
                                co-located (anti-affinity) with, where co-located
                                is defined as running on a node whose value of the
                                label with key <topologyKey> matches that of any node
                                on which a pod of the set of pods is running
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources,
                                    in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                namespaces:
                                  description: namespaces specifies which namespaces
                                    the labelSelector applies to (matches against);
                                    null or empty list means "this pod's namespace"
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods
                                    matching the labelSelector in the specified namespaces,
                                    where co-located is defined as running on a node
                                    whose value of the label with key topologyKey
                                    matches that of any node on which any of the selected
                                    pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            type: array
                        type: object
                    type: object
                  annotations:
                    additionalProperties:
                      type: string
                    description: 'Annotations of the component. Merged into the cluster-level
                      annotations if non-empty Optional: Defaults to cluster-level
                      setting'
                    type: object
                  baseImage:
                    default: pingcap/pd
                    description: 'TODO: remove optional after defaulting introduced
                      Base image of the component, image tag is now allowed during
                      validation'
                    type: string
                  config:
                    description: Config is the Configuration of pd-servers
                    properties:
                      auto-compaction-mode:
                        description: AutoCompactionMode is either 'periodic' or 'revision'.
                          The default value is 'periodic'.
                        type: string
                      auto-compaction-retention-v2:
                        description: AutoCompactionRetention is either duration string
                          with time unit (e.g. '5m' for 5-minute), or revision unit
                          (e.g. '5000'). If no time unit is provided and compaction
                          mode is 'periodic', the unit defaults to hour. For example,
                          '5' translates into 5-hour. The default retention is 1 hour.
                          Before etcd v3.3.x, the type of retention is int. We add
                          'v2' suffix to make it backward compatible.
                        type: string
                      cluster-version:
                        type: string
                      dashboard:
                        description: DashboardConfig is the configuration for tidb-dashboard.
                        properties:
                          public-path-prefix:
                            type: string
                          tidb-cacert-path:
                            type: string
                          tidb-cert-path:
                            type: string
                          tidb-key-path:
                            type: string
                        type: object
                      election-interval:
                        description: ElectionInterval is the interval for etcd Raft
                          election.
                        type: string
                      enable-grpc-gateway:
                        description: 'Optional: Defaults to true'
                        type: boolean
                      enable-prevote:
                        description: 'Prevote is true to enable Raft Pre-Vote. If
                          enabled, Raft runs an additional election phase to check
                          whether it would get enough votes to win an election, thus
                          minimizing disruptions. Optional: Defaults to true'
                        type: boolean
                      force-new-cluster:
                        type: boolean
                      label-property:
                        additionalProperties:
                          items:
                            description: PDStoreLabel is the config item of LabelPropertyConfig.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        type: object
                      lease:
                        description: 'LeaderLease time, if leader doesn''t update
                          its TTL in etcd after lease time, etcd will expire the leader
                          key and other servers can campaign the leader again. Etcd
                          only supports seconds TTL, so here is second too. Optional:
                          Defaults to 3'
                        format: int64
                        type: integer
                      log:
                        description: Log related config.
                        properties:
                          development:
                            description: Development puts the logger in development
                              mode, which changes the behavior of DPanicLevel and
                              takes stacktraces more liberally.
                            type: boolean
                          disable-caller:
                            description: DisableCaller stops annotating logs with
                              the calling function's file name and line number. By
                              default, all logs are annotated.
                            type: boolean
                          disable-error-verbose:
                            description: DisableErrorVerbose stops annotating logs
                              with the full verbose error message.
                            type: boolean
                          disable-stacktrace:
                            description: DisableStacktrace completely disables automatic
                              stacktrace capturing. By default, stacktraces are captured
                              for WarnLevel and above logs in development and ErrorLevel
                              and above in production.
                            type: boolean
                          disable-timestamp:
                            description: Disable automatic timestamps in output.
                            type: boolean
                          file:
                            description: File log config.
                            properties:
                              filename:
                                description: Log filename, leave empty to disable
                                  file log.
                                type: string
                              log-rotate:
                                description: Is log rotate enabled.
                                type: boolean
                              max-backups:
                                description: Maximum number of old log files to retain.
                                type: integer
                              max-days:
                                description: Max log keep days, default is never deleting.
                                type: integer
                              max-size:
                                description: Max size for a single file, in MB.
                                type: integer
                            type: object
                          format:
                            description: Log format. one of json, text, or console.
                            type: string
                          level:
                            description: 'Log level. Optional: Defaults to info'
                            type: string
                        type: object
                      log-file:
                        description: Backward compatibility.
                        type: string
                      log-level:
                        type: string
                      metric:
                        properties:
                          address:
                            type: string
                          interval:
                            type: string
                          job:
                            type: string
                        type: object
                      namespace:
                        additionalProperties:
                          description: PDNamespaceConfig is to overwrite the global
                            setting for specific namespace
                          properties:
                            hot-region-schedule-limit:
                              description: HotRegionScheduleLimit is the max coexist
                                hot region schedules.
                              format: int64
                              type: integer
                            leader-schedule-limit:
                              description: LeaderScheduleLimit is the max coexist
                                leader schedules.
                              format: int64
                              type: integer
                            max-replicas:
                              description: MaxReplicas is the number of replicas for
                                each region.
                              format: int64
                              type: integer
                            merge-schedule-limit:
                              description: MergeScheduleLimit is the max coexist merge
                                schedules.
                              format: int64
                              type: integer
                            region-schedule-limit:
                              description: RegionScheduleLimit is the max coexist
                                region schedules.
                              format: int64
                              type: integer
                            replica-schedule-limit:
                              description: ReplicaScheduleLimit is the max coexist
                                replica schedules.
                              format: int64
                              type: integer
                          type: object
                        type: object
                      namespace-classifier:
                        description: 'NamespaceClassifier is for classifying stores/regions
                          into different namespaces. Optional: Defaults to true'
                        type: string
                      pd-server:
                        description: PDServerConfig is the configuration for pd server.
                        properties:
                          metric-storage:
                            description: MetricStorage is the cluster metric storage.
                              Currently we use prometheus as metric storage, we may
                              use PD/TiKV as metric storage later. Imported from v3.1.0
                            type: string
                          use-region-storage:
                            description: UseRegionStorage enables the independent
                              region storage.
                            type: boolean
                        type: object
                      quota-backend-bytes:
                        description: QuotaBackendBytes Raise alarms when backend size
                          exceeds the given quota. 0 means use the default quota.
                          the default size is 2GB, the maximum is 8GB.
                        type: string
                      replication:
                        description: Immutable, change should be made through pd-ctl
                          after cluster creation
                        properties:
                          enable-placement-rules:
                            description: When PlacementRules feature is enabled. MaxReplicas
                              and LocationLabels are not used anymore.
                            type: boolean
                          location-labels:
                            description: The label keys specified the location of
                              a store. The placement priorities is implied by the
                              order of label keys. For example, ["zone", "rack"] means
                              that we should place replicas to different zones first,
                              then to different racks if we don't have enough zones.
                              Immutable, change should be made through pd-ctl after
                              cluster creation
                            items:
                              type: string
                            type: array
                          max-replicas:
                            description: 'MaxReplicas is the number of replicas for
                              each region. Immutable, change should be made through
                              pd-ctl after cluster creation Optional: Defaults to
                              3'
                            format: int64
                            type: integer
                          strictly-match-label:
                            description: StrictlyMatchLabel strictly checks if the
                              label of TiKV is matched with LocaltionLabels. Immutable,
                              change should be made through pd-ctl after cluster creation.
                              Imported from v3.1.0
                            type: boolean
                        type: object
                      schedule:
                        description: Immutable, change should be made through pd-ctl
                          after cluster creation
                        properties:
                          disable-location-replacement:
                            description: DisableLocationReplacement is the option
                              to prevent replica checker from moving replica to a
                              better location. Immutable, change should be made through
                              pd-ctl after cluster creation
                            type: boolean
                          disable-make-up-replica:
                            description: DisableMakeUpReplica is the option to prevent
                              replica checker from making up replicas when replica
                              count is less than expected. Immutable, change should
                              be made through pd-ctl after cluster creation
                            type: boolean
                          disable-namespace-relocation:
                            description: DisableNamespaceRelocation is the option
                              to prevent namespace checker from moving replica to
                              the target namespace. Immutable, change should be made
                              through pd-ctl after cluster creation
                            type: boolean
                          disable-raft-learner:
                            description: DisableLearner is the option to disable using
                              AddLearnerNode instead of AddNode Immutable, change
                              should be made through pd-ctl after cluster creation
                            type: boolean
                          disable-remove-down-replica:
                            description: DisableRemoveDownReplica is the option to
                              prevent replica checker from removing down replicas.
                              Immutable, change should be made through pd-ctl after
                              cluster creation
                            type: boolean
                          disable-remove-extra-replica:
                            description: DisableRemoveExtraReplica is the option to
                              prevent replica checker from removing extra replicas.
                              Immutable, change should be made through pd-ctl after
                              cluster creation
                            type: boolean
                          disable-replace-offline-replica:
                            description: DisableReplaceOfflineReplica is the option
                              to prevent replica checker from repalcing offline replicas.
                              Immutable, change should be made through pd-ctl after
                              cluster creation
                            type: boolean
                          enable-cross-table-merge:
                            description: EnableCrossTableMerge is the option to enable
                              cross table merge. This means two Regions can be merged
                              with different table IDs. This option only works when
                              key type is "table". Imported from v3.1.0
                            type: boolean
                          enable-one-way-merge:
                            description: EnableOneWayMerge is the option to enable
                              one way merge. This means a Region can only be merged
                              into the next region of it. Imported from v3.1.0
                            type: boolean
                          high-space-ratio:
                            description: HighSpaceRatio is the highest usage ratio
                              of store which regraded as high space. High space means
                              there is a lot of spare capacity, and store region score
                              varies directly with used size. Immutable, change should
                              be made through pd-ctl after cluster creation
                            type: number
                          hot-region-cache-hits-threshold:
                            description: HotRegionCacheHitThreshold is the cache hits
                              threshold of the hot region. If the number of times
                              a region hits the hot cache is greater than this threshold,
                              it is considered a hot region. Immutable, change should
                              be made through pd-ctl after cluster creation
                            format: int64
                            type: integer
                          hot-region-schedule-limit:
                            description: 'HotRegionScheduleLimit is the max coexist
                              hot region schedules. Immutable, change should be made
                              through pd-ctl after cluster creation Optional: Defaults
                              to 4'
                            format: int64
                            type: integer
                          leader-schedule-limit:
                            description: 'LeaderScheduleLimit is the max coexist leader
                              schedules. Immutable, change should be made through
                              pd-ctl after cluster creation. Optional: Defaults to
                              4. Imported from v3.1.0'
                            format: int64
                            type: integer
                          low-space-ratio:
                            description: "high space stage         transition stage
                              \          low space stage |--------------------|-----------------------------|-------------------------|
                              ^                    ^                             ^
                              \                        ^ 0       HighSpaceRatio *
                              capacity       LowSpaceRatio * capacity          capacity
                              \n LowSpaceRatio is the lowest usage ratio of store
                              which regraded as low space. When in low space, store
                              region score increases to very large and varies inversely
                              with available size. Immutable, change should be made
                              through pd-ctl after cluster creation"
                            type: number
                          max-merge-region-keys:
                            description: 'Immutable, change should be made through
                              pd-ctl after cluster creation Optional: Defaults to
                              200000'
                            format: int64
                            type: integer
                          max-merge-region-size:
                            description: 'If both the size of region is smaller than
                              MaxMergeRegionSize and the number of rows in region
                              is smaller than MaxMergeRegionKeys, it will try to merge
                              with adjacent regions. Immutable, change should be made
                              through pd-ctl after cluster creation Optional: Defaults
                              to 20'
                            format: int64
                            type: integer
                          max-pending-peer-count:
                            description: 'Immutable, change should be made through
                              pd-ctl after cluster creation Optional: Defaults to
                              16'
                            format: int64
                            type: integer
                          max-snapshot-count:
                            description: 'If the snapshot count of one store is greater
                              than this value, it will never be used as a source or
                              target store. Immutable, change should be made through
                              pd-ctl after cluster creation Optional: Defaults to
                              3'
                            format: int64
                            type: integer
                          max-store-down-time:
                            description: 'MaxStoreDownTime is the max duration after
                              which a store will be considered to be down if it hasn''t
                              reported heartbeats. Immutable, change should be made
                              through pd-ctl after cluster creation Optional: Defaults
                              to 30m'
                            type: string
                          merge-schedule-limit:
                            description: 'MergeScheduleLimit is the max coexist merge
                              schedules. Immutable, change should be made through
                              pd-ctl after cluster creation Optional: Defaults to
                              8'
                            format: int64
                            type: integer
                          patrol-region-interval:
                            description: PatrolRegionInterval is the interval for
                              scanning region during patrol. Immutable, change should
                              be made through pd-ctl after cluster creation
                            type: string
                          region-schedule-limit:
                            description: 'RegionScheduleLimit is the max coexist region
                              schedules. Immutable, change should be made through
                              pd-ctl after cluster creation Optional: Defaults to
                              2048'
                            format: int64
                            type: integer
                          replica-schedule-limit:
                            description: 'ReplicaScheduleLimit is the max coexist
                              replica schedules. Immutable, change should be made
                              through pd-ctl after cluster creation Optional: Defaults
                              to 64'
                            format: int64
                            type: integer
                          schedulers-payload:
                            additionalProperties:
                              type: string
                            description: Only used to display
                            type: object
                          schedulers-v2:
                            description: Schedulers support for loding customized
                              schedulers Immutable, change should be made through
                              pd-ctl after cluster creation
                            items:
                              description: PDSchedulerConfig is customized scheduler
                                configuration
                              properties:
                                args:
                                  description: Immutable, change should be made through
                                    pd-ctl after cluster creation
                                  items:
                                    type: string
                                  type: array
                                disable:
                                  description: Immutable, change should be made through
                                    pd-ctl after cluster creation
                                  type: boolean
                                type:
                                  description: Immutable, change should be made through
                                    pd-ctl after cluster creation
                                  type: string
                              type: object
                            type: array
                          split-merge-interval:
                            description: 'SplitMergeInterval is the minimum interval
                              time to permit merge after split. Immutable, change
                              should be made through pd-ctl after cluster creation
                              Optional: Defaults to 1h'
                            type: string
                          tolerant-size-ratio:
                            description: TolerantSizeRatio is the ratio of buffer
                              size for balance scheduler. Immutable, change should
                              be made through pd-ctl after cluster creation. Imported
                              from v3.1.0
                            type: number
                        type: object
                      security:
                        description: PDSecurityConfig is the configuration for supporting
                          tls.
                        properties:
                          cacert-path:
                            description: CAPath is the path of file that contains
                              list of trusted SSL CAs. if set, following four settings
                              shouldn't be empty
                            type: string
                          cert-allowed-cn:
                            description: CertAllowedCN is the Common Name that allowed
                            items:
                              type: string
                            type: array
                          cert-path:
                            description: CertPath is the path of file that contains
                              X509 certificate in PEM format.
                            type: string
                          key-path:
                            description: KeyPath is the path of file that contains
                              X509 key in PEM format.
                            type: string
                        type: object
                      tikv-interval:
                        description: TickInterval is the interval for etcd Raft tick.
                        type: string
                      tso-save-interval:
                        description: 'TsoSaveInterval is the interval to save timestamp.
                          Optional: Defaults to 3s'
                        type: string
                    type: object
                  configUpdateStrategy:
                    description: 'ConfigUpdateStrategy of the component. Override
                      the cluster-level updateStrategy if present Optional: Defaults
                      to cluster-level setting'
                    type: string
                  env:
                    description: List of environment variables to set in the container,
                      like v1.Container.Env.
                    items:
                      description: EnvVar represents an environment variable present
                        in a Container.
                      properties:
                        name:
                          description: Name of the environment variable. Must be a
                            C_IDENTIFIER.
                          type: string
                        value:
                          description: 'Variable references $(VAR_NAME) are expanded
                            using the previous defined environment variables in the
                            container and any service environment variables. If a
                            variable cannot be resolved, the reference in the input
                            string will be unchanged. The $(VAR_NAME) syntax can be
                            escaped with a double $$, ie: $$(VAR_NAME). Escaped references
                            will never be expanded, regardless of whether the variable
                            exists or not. Defaults to "".'
                          type: string
                        valueFrom:
                          description: Source for the environment variable's value.
                            Cannot be used if value is not empty.
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            fieldRef:
                              description: 'Selects a field of the pod: supports metadata.name,
                                metadata.namespace, metadata.labels, metadata.annotations,
                                spec.nodeName, spec.serviceAccountName, status.hostIP,
                                status.podIP.'
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                            resourceFieldRef:
                              description: 'Selects a resource of the container: only
                                resources limits and requests (limits.cpu, limits.memory,
                                limits.ephemeral-storage, requests.cpu, requests.memory
                                and requests.ephemeral-storage) are currently supported.'
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  hostNetwork:
                    description: 'Whether Hostnetwork of the component is enabled.
                      Override the cluster-level setting if present Optional: Defaults
                      to cluster-level setting'
                    type: boolean
                  image:
                    description: Image of the component, override baseImage and version
                      if present Deprecated
                    type: string
                  imagePullPolicy:
                    description: 'ImagePullPolicy of the component. Override the cluster-level
                      imagePullPolicy if present Optional: Defaults to cluster-level
                      setting'
                    type: string
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                    type: object
                  maxFailoverCount:
                    description: 'MaxFailoverCount limit the max replicas could be
                      added in failover, 0 means no failover. Optional: Defaults to
                      3'
                    format: int32
                    minimum: 0
                    type: integer
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: 'NodeSelector of the component. Merged into the cluster-level
                      nodeSelector if non-empty Optional: Defaults to cluster-level
                      setting'
                    type: object
                  podSecurityContext:
                    description: PodSecurityContext of the component
                    properties:
                      fsGroup:
                        description: "A special supplemental group that applies to
                          all containers in a pod. Some volume types allow the Kubelet
                          to change the ownership of that volume to be owned by the
                          pod: \n 1. The owning GID will be the FSGroup 2. The setgid
                          bit is set (new files created in the volume will be owned
                          by FSGroup) 3. The permission bits are OR'd with rw-rw----
                          \n If unset, the Kubelet will not modify the ownership and
                          permissions of any volume."
                        format: int64
                        type: integer
                      runAsGroup:
                        description: The GID to run the entrypoint of the container
                          process. Uses runtime default if unset. May also be set
                          in SecurityContext.  If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext
                          takes precedence for that container.
                        format: int64
                        type: integer
                      runAsNonRoot:
                        description: Indicates that the container must run as a non-root
                          user. If true, the Kubelet will validate the image at runtime
                          to ensure that it does not run as UID 0 (root) and fail
                          to start the container if it does. If unset or false, no
                          such validation will be performed. May also be set in SecurityContext.  If
                          set in both SecurityContext and PodSecurityContext, the
                          value specified in SecurityContext takes precedence.
                        type: boolean
                      runAsUser:
                        description: The UID to run the entrypoint of the container
                          process. Defaults to user specified in image metadata if
                          unspecified. May also be set in SecurityContext.  If set
                          in both SecurityContext and PodSecurityContext, the value
                          specified in SecurityContext takes precedence for that container.
                        format: int64
                        type: integer
                      seLinuxOptions:
                        description: The SELinux context to be applied to all containers.
                          If unspecified, the container runtime will allocate a random
                          SELinux context for each container.  May also be set in
                          SecurityContext.  If set in both SecurityContext and PodSecurityContext,
                          the value specified in SecurityContext takes precedence
                          for that container.
                        properties:
                          level:
                            description: Level is SELinux level label that applies
                              to the container.
                            type: string
                          role:
                            description: Role is a SELinux role label that applies
                              to the container.
                            type: string
                          type:
                            description: Type is a SELinux type label that applies
                              to the container.
                            type: string
                          user:
                            description: User is a SELinux user label that applies
                              to the container.
                            type: string
                        type: object
                      supplementalGroups:
                        description: A list of groups applied to the first process
                          run in each container, in addition to the container's primary
                          GID.  If unspecified, no groups will be added to any container.
                        items:
                          format: int64
                          type: integer
                        type: array
                      sysctls:
                        description: Sysctls hold a list of namespaced sysctls used
                          for the pod. Pods with unsupported sysctls (by the container
                          runtime) might fail to launch.
                        items:
                          description: Sysctl defines a kernel parameter to be set
                          properties:
                            name:
                              description: Name of a property to set
                              type: string
                            value:
                              description: Value of a property to set
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      windowsOptions:
                        description: The Windows specific settings applied to all
                          containers. If unspecified, the options within a container's
                          SecurityContext will be used. If set in both SecurityContext
                          and PodSecurityContext, the value specified in SecurityContext
                          takes precedence.
                        properties:
                          gmsaCredentialSpec:
                            description: GMSACredentialSpec is where the GMSA admission
                              webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                              inlines the contents of the GMSA credential spec named
                              by the GMSACredentialSpecName field. This field is alpha-level
                              and is only honored by servers that enable the WindowsGMSA
                              feature flag.
                            type: string
                          gmsaCredentialSpecName:
                            description: GMSACredentialSpecName is the name of the
                              GMSA credential spec to use. This field is alpha-level
                              and is only honored by servers that enable the WindowsGMSA
                              feature flag.
                            type: string
                          runAsUserName:
                            description: The UserName in Windows to run the entrypoint
                              of the container process. Defaults to the user specified
                              in image metadata if unspecified. May also be set in
                              PodSecurityContext. If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext
                              takes precedence. This field is alpha-level and it is
                              only honored by servers that enable the WindowsRunAsUserName
                              feature flag.
                            type: string
                        type: object
                    type: object
                  priorityClassName:
                    description: 'PriorityClassName of the component. Override the
                      cluster-level one if present Optional: Defaults to cluster-level
                      setting'
                    type: string
                  replicas:
                    description: The desired ready replicas
                    format: int32
                    minimum: 1
                    type: integer
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                    type: object
                  schedulerName:
                    description: 'SchedulerName of the component. Override the cluster-level
                      one if present Optional: Defaults to cluster-level setting'
                    type: string
                  service:
                    description: 'Service defines a Kubernetes service of PD cluster.
                      Optional: Defaults to `.spec.services` in favor of backward
                      compatibility'
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Additional annotations of the kubernetes service
                          object
                        type: object
                      clusterIP:
                        description: ClusterIP is the clusterIP of service
                        type: string
                      loadBalancerIP:
                        description: 'LoadBalancerIP is the loadBalancerIP of service
                          Optional: Defaults to omitted'
                        type: string
                      nodePort:
                        description: NodePort is the nodePort of service
                        type: string
                      portName:
                        description: PortName is the name of service port
                        type: string
                      type:
                        description: Type of the real kubernetes service
                        type: string
                    type: object
                  storageClassName:
                    description: The storageClassName of the persistent volume for
                      PD data storage. Defaults to Kubernetes default storage class.
                    type: string
                  tlsClientSecretName:
                    description: TLSClientSecretName is the name of secret which stores
                      tikv server client certificate which used by Dashboard.
                    type: string
                  tolerations:
                    description: 'Tolerations of the component. Override the cluster-level
                      tolerations if non-empty Optional: Defaults to cluster-level
                      setting'
                    items:
                      description: The pod this Toleration is attached to tolerates
                        any taint that matches the triple <key,value,effect> using
                        the matching operator <operator>.
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match.
                            Empty means match all taint effects. When specified, allowed
                            values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies
                            to. Empty means match all taint keys. If the key is empty,
                            operator must be Exists; this combination means to match
                            all values and all keys.
                          type: string
                        operator:
                          description: Operator represents a key's relationship to
                            the value. Valid operators are Exists and Equal. Defaults
                            to Equal. Exists is equivalent to wildcard for value,
                            so that a pod can tolerate all taints of a particular
                            category.
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of
                            time the toleration (which must be of effect NoExecute,
                            otherwise this field is ignored) tolerates the taint.
                            By default, it is not set, which means tolerate the taint
                            forever (do not evict). Zero and negative values will
                            be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches
                            to. If the operator is Exists, the value should be empty,
                            otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                  version:
                    description: 'Version of the component. Override the cluster-level
                      version if non-empty Optional: Defaults to cluster-level setting'
                    type: string
                required:
                - replicas
                type: object
              priorityClassName:
                description: 'PriorityClassName of TiDB cluster Pods Optional: Defaults
                  to omitted'
                type: string
              schedulerName:
                description: SchedulerName of TiKV cluster Pods
                type: string
              tikv:
                description: TiKV cluster spec
                properties:
                  affinity:
                    description: 'Affinity of the component. Override the cluster-level
                      one if present Optional: Defaults to cluster-level setting'
                    properties:
                      nodeAffinity:
                        description: Describes node affinity scheduling rules for
                          the pod.
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the affinity expressions specified
                              by this field, but it may choose a node that violates
                              one or more of the expressions. The node that is most
                              preferred is the one with the greatest sum of weights,
                              i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node matches the corresponding matchExpressions;
                              the node(s) with the highest sum are the most preferred.
                            items:
                              description: An empty preferred scheduling term matches
                                all objects with implicit weight 0 (i.e. it's a no-op).
                                A null preferred scheduling term matches no objects
                                (i.e. is also a no-op).
                              properties:
                                preference:
                                  description: A node selector term, associated with
                                    the corresponding weight.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                weight:
                                  description: Weight associated with matching the
                                    corresponding nodeSelectorTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - preference
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the affinity requirements specified by
                              this field are not met at scheduling time, the pod will
                              not be scheduled onto the node. If the affinity requirements
                              specified by this field cease to be met at some point
                              during pod execution (e.g. due to an update), the system
                              may or may not try to eventually evict the pod from
                              its node.
                            properties:
                              nodeSelectorTerms:
                                description: Required. A list of node selector terms.
                                  The terms are ORed.
                                items:
                                  description: A null or empty node selector term
                                    matches no objects. The requirements of them are
                                    ANDed. The TopologySelectorTerm type implements
                                    a subset of the NodeSelectorTerm.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            required:
                            - nodeSelectorTerms
                            type: object
                        type: object
                      podAffinity:
                        description: Describes pod affinity scheduling rules (e.g.
                          co-locate this pod in the same node, zone, etc. as some
                          other pod(s)).
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the affinity expressions specified
                              by this field, but it may choose a node that violates
                              one or more of the expressions. The node that is most
                              preferred is the one with the greatest sum of weights,
                              i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node has pods which matches the corresponding
                              podAffinityTerm; the node(s) with the highest sum are
                              the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm
                                fields are added per-node to find the most preferred
                                node(s)
                              properties:
                                podAffinityTerm:
                                  description: Required. A pod affinity term, associated
                                    with the corresponding weight.
                                  properties:
                                    labelSelector:
                                      description: A label query over a set of resources,
                                        in this case pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                    namespaces:
                                      description: namespaces specifies which namespaces
                                        the labelSelector applies to (matches against);
                                        null or empty list means "this pod's namespace"
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity)
                                        or not co-located (anti-affinity) with the
                                        pods matching the labelSelector in the specified
                                        namespaces, where co-located is defined as
                                        running on a node whose value of the label
                                        with key topologyKey matches that of any node
                                        on which any of the selected pods is running.
                                        Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                weight:
                                  description: weight associated with matching the
                                    corresponding podAffinityTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - podAffinityTerm
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the affinity requirements specified by
                              this field are not met at scheduling time, the pod will
                              not be scheduled onto the node. If the affinity requirements
                              specified by this field cease to be met at some point
                              during pod execution (e.g. due to a pod label update),
                              the system may or may not try to eventually evict the
                              pod from its node. When there are multiple elements,
                              the lists of nodes corresponding to each podAffinityTerm
                              are intersected, i.e. all terms must be satisfied.
                            items:
                              description: Defines a set of pods (namely those matching
                                the labelSelector relative to the given namespace(s))
                                that this pod should be co-located (affinity) or not
                                co-located (anti-affinity) with, where co-located
                                is defined as running on a node whose value of the
                                label with key <topologyKey> matches that of any node
                                on which a pod of the set of pods is running
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources,
                                    in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                namespaces:
                                  description: namespaces specifies which namespaces
                                    the labelSelector applies to (matches against);
                                    null or empty list means "this pod's namespace"
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods
                                    matching the labelSelector in the specified namespaces,
                                    where co-located is defined as running on a node
                                    whose value of the label with key topologyKey
                                    matches that of any node on which any of the selected
                                    pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            type: array
                        type: object
                      podAntiAffinity:
                        description: Describes pod anti-affinity scheduling rules
                          (e.g. avoid putting this pod in the same node, zone, etc.
                          as some other pod(s)).
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the anti-affinity expressions
                              specified by this field, but it may choose a node that
                              violates one or more of the expressions. The node that
                              is most preferred is the one with the greatest sum of
                              weights, i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              anti-affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node has pods which matches the corresponding
                              podAffinityTerm; the node(s) with the highest sum are
                              the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm
                                fields are added per-node to find the most preferred
                                node(s)
                              properties:
                                podAffinityTerm:
                                  description: Required. A pod affinity term, associated
                                    with the corresponding weight.
                                  properties:
                                    labelSelector:
                                      description: A label query over a set of resources,
                                        in this case pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                    namespaces:
                                      description: namespaces specifies which namespaces
                                        the labelSelector applies to (matches against);
                                        null or empty list means "this pod's namespace"
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity)
                                        or not co-located (anti-affinity) with the
                                        pods matching the labelSelector in the specified
                                        namespaces, where co-located is defined as
                                        running on a node whose value of the label
                                        with key topologyKey matches that of any node
                                        on which any of the selected pods is running.
                                        Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                weight:
                                  description: weight associated with matching the
                                    corresponding podAffinityTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - podAffinityTerm
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the anti-affinity requirements specified
                              by this field are not met at scheduling time, the pod
                              will not be scheduled onto the node. If the anti-affinity
                              requirements specified by this field cease to be met
                              at some point during pod execution (e.g. due to a pod
                              label update), the system may or may not try to eventually
                              evict the pod from its node. When there are multiple
                              elements, the lists of nodes corresponding to each podAffinityTerm
                              are intersected, i.e. all terms must be satisfied.
                            items:
                              description: Defines a set of pods (namely those matching
                                the labelSelector relative to the given namespace(s))
                                that this pod should be co-located (affinity) or not
                                co-located (anti-affinity) with, where co-located
                                is defined as running on a node whose value of the
                                label with key <topologyKey> matches that of any node
                                on which a pod of the set of pods is running
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources,
                                    in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                namespaces:
                                  description: namespaces specifies which namespaces
                                    the labelSelector applies to (matches against);
                                    null or empty list means "this pod's namespace"
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods
                                    matching the labelSelector in the specified namespaces,
                                    where co-located is defined as running on a node
                                    whose value of the label with key topologyKey
                                    matches that of any node on which any of the selected
                                    pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            type: array
                        type: object
                    type: object
                  annotations:
                    additionalProperties:
                      type: string
                    description: 'Annotations of the component. Merged into the cluster-level
                      annotations if non-empty Optional: Defaults to cluster-level
                      setting'
                    type: object
                  baseImage:
                    default: pingcap/tikv
                    description: 'TODO: remove optional after defaulting introduced
                      Base image of the component, image tag is now allowed during
                      validation'
                    type: string
                  config:
                    description: Config is the Configuration of tikv-servers
                    properties:
                      coprocessor:
                        description: TiKVCoprocessorConfig is the configuration of
                          TiKV Coprocessor component.
                        properties:
                          batch-split-limit:
                            description: One split check produces several split keys
                              in batch. This config limits the number of produced
                              split keys in one batch. optional
                            format: int64
                            type: integer
                          region-max-keys:
                            description: 'When the number of keys in Region [a,e)
                              exceeds the `region-max-keys`, it will be split into
                              several Regions [a,b), [b,c), [c,d), [d,e) and the number
                              of keys in [a,b), [b,c), [c,d) will be `region-split-keys`.
                              See also: region-split-keys Optional: Defaults to 1440000
                              optional'
                            format: int64
                            type: integer
                          region-max-size:
                            description: 'When Region [a,e) size exceeds `region-max-size`,
                              it will be split into several Regions [a,b), [b,c),
                              [c,d), [d,e) and the size of [a,b), [b,c), [c,d) will
                              be `region-split-size` (or a little larger). See also:
                              region-split-size Optional: Defaults to 144MB optional'
                            type: string
                          region-split-keys:
                            description: 'When the number of keys in Region [a,e)
                              exceeds the `region-max-keys`, it will be split into
                              several Regions [a,b), [b,c), [c,d), [d,e) and the number
                              of keys in [a,b), [b,c), [c,d) will be `region-split-keys`.
                              See also: region-max-keys Optional: Defaults to 960000
                              optional'
                            format: int64
                            type: integer
                          region-split-size:
                            description: 'When Region [a,e) size exceeds `region-max-size`,
                              it will be split into several Regions [a,b), [b,c),
                              [c,d), [d,e) and the size of [a,b), [b,c), [c,d) will
                              be `region-split-size` (or a little larger). See also:
                              region-max-size Optional: Defaults to 96MB optional'
                            type: string
                          split-region-on-table:
                            description: 'When it is set to `true`, TiKV will try
                              to split a Region with table prefix if that Region crosses
                              tables. It is recommended to turn off this option if
                              there will be a large number of tables created. Optional:
                              Defaults to false optional'
                            type: boolean
                        type: object
                      gc:
                        properties:
                          "\tbatch-keys":
                            description: 'Optional: Defaults to 512'
                            format: int64
                            type: integer
                          "\tmax-write-bytes-per-sec":
                            type: string
                        type: object
                      import:
                        properties:
                          import-dir:
                            type: string
                          max-open-engines:
                            format: int64
                            type: integer
                          max-prepare-duration:
                            type: string
                          num-import-jobs:
                            format: int64
                            type: integer
                          num-import-sst-jobs:
                            format: int64
                            type: integer
                          num-threads:
                            format: int64
                            type: integer
                          region-split-size:
                            type: string
                          stream-channel-window:
                            format: int64
                            type: integer
                          upload-speed-limit:
                            type: string
                        type: object
                      log-file:
                        type: string
                      log-level:
                        description: 'Optional: Defaults to info'
                        type: string
                      log-rotation-size:
                        type: string
                      log-rotation-timespan:
                        description: 'Optional: Defaults to 24h'
                        type: string
                      panic-when-unexpected-key-or-data:
                        type: boolean
                      pd:
                        properties:
                          endpoints:
                            description: "The PD endpoints for the client. \n Default
                              is empty."
                            items:
                              type: string
                            type: array
                          retry-interval:
                            description: "The interval at which to retry a PD connection
                              initialization. \n Default is 300ms. Optional: Defaults
                              to 300ms"
                            type: string
                          retry-log-every:
                            description: "If the client observes the same error message
                              on retry, it can repeat the message only every `n` times.
                              \n Default is 10. Set to 1 to disable this feature.
                              Optional: Defaults to 10"
                            format: int64
                            type: integer
                          retry-max-count:
                            description: "The maximum number of times to retry a PD
                              connection initialization. \n Default is isize::MAX,
                              represented by -1. Optional: Defaults to -1"
                            format: int64
                            type: integer
                        type: object
                      pessimistic-txn:
                        properties:
                          enabled:
                            type: boolean
                          pipelined:
                            type: boolean
                          wait-for-lock-timeout:
                            description: The default and maximum delay before responding
                              to TiDB when pessimistic transactions encounter locks
                            type: string
                          wake-up-delay-duration:
                            description: If more than one transaction is waiting for
                              the same lock, only the one with smallest start timestamp
                              will be waked up immediately when the lock is released.
                              Others will be waked up after `wake_up_delay_duration`
                              to reduce contention and make the oldest one more likely
                              acquires the lock.
                            type: string
                        type: object
                      raftdb:
                        properties:
                          allow-concurrent-memtable-write:
                            type: boolean
                          bytes-per-sync:
                            type: string
                          compaction-readahead-size:
                            type: string
                          create-if-missing:
                            type: boolean
                          defaultcf:
                            description: TiKVCfConfig is the config of a cf
                            properties:
                              block-based-bloom-filter:
                                type: boolean
                              block-cache-size:
                                type: string
                              block-size:
                                type: string
                              bloom-filter-bits-per-key:
                                format: int64
                                type: integer
                              cache-index-and-filter-blocks:
                                type: boolean
                              compaction-pri:
                                format: int64
                                type: integer
                              compaction-style:
                                format: int64
                                type: integer
                              compression-per-level:
                                items:
                                  type: string
                                type: array
                              disable-auto-compactions:
                                type: boolean
                              disable-block-cache:
                                type: boolean
                              dynamic-level-bytes:
                                type: boolean
                              enable-doubly-skiplist:
                                type: boolean
                              force-consistency-checks:
                                type: boolean
                              hard-pending-compaction-bytes-limit:
                                type: string
                              level0-file-num-compaction-trigger:
                                format: int64
                                type: integer
                              level0-slowdown-writes-trigger:
                                format: int64
                                type: integer
                              level0-stop-writes-trigger:
                                format: int64
                                type: integer
                              max-bytes-for-level-base:
                                type: string
                              max-bytes-for-level-multiplier:
                                format: int64
                                type: integer
                              max-compaction-bytes:
                                type: string
                              max-write-buffer-number:
                                format: int64
                                type: integer
                              min-write-buffer-number-to-merge:
                                format: int64
                                type: integer
                              num-levels:
                                format: int64
                                type: integer
                              optimize-filters-for-hits:
                                type: boolean
                              pin-l0-filter-and-index-blocks:
                                type: boolean
                              prop-keys-index-distance:
                                format: int64
                                type: integer
                              prop-size-index-distance:
                                format: int64
                                type: integer
                              read-amp-bytes-per-bit:
                                format: int64
                                type: integer
                              soft-pending-compaction-bytes-limit:
                                type: string
                              target-file-size-base:
                                type: string
                              titan:
                                description: TiKVTitanCfConfig is the titian config.
                                properties:
                                  blob-cache-size:
                                    type: string
                                  blob-file-compression:
                                    type: string
                                  blob-run-mode:
                                    type: string
                                  discardable-ratio:
                                    type: number
                                  gc-merge-rewrite:
                                    description: optional
                                    type: boolean
                                  level_merge:
                                    description: optional
                                    type: boolean
                                  max-gc-batch-size:
                                    type: string
                                  merge-small-file-threshold:
                                    type: string
                                  min-blob-size:
                                    type: string
                                  min-gc-batch-size:
                                    type: string
                                  sample-ratio:
                                    type: number
                                type: object
                              use-bloom-filter:
                                type: boolean
                              whole-key-filtering:
                                type: boolean
                              write-buffer-size:
                                type: string
                            type: object
                          enable-pipelined-write:
                            type: boolean
                          enable-statistics:
                            type: boolean
                          info-log-dir:
                            type: string
                          info-log-keep-log-file-num:
                            format: int64
                            type: integer
                          info-log-max-size:
                            type: string
                          info-log-roll-time:
                            type: string
                          max-background-jobs:
                            format: int64
                            type: integer
                          max-manifest-file-size:
                            type: string
                          max-open-files:
                            format: int64
                            type: integer
                          max-sub-compactions:
                            format: int64
                            type: integer
                          max-total-wal-size:
                            type: string
                          stats-dump-period:
                            type: string
                          use-direct-io-for-flush-and-compaction:
                            type: boolean
                          wal-bytes-per-sync:
                            type: string
                          wal-dir:
                            type: string
                          wal-recovery-mode:
                            type: string
                          wal-size-limit:
                            type: string
                          wal-ttl-seconds:
                            format: int64
                            type: integer
                          writable-file-max-buffer-size:
                            type: string
                        type: object
                      raftstore:
                        description: TiKVRaftstoreConfig is the configuration of TiKV
                          raftstore component.
                        properties:
                          abnormal-leader-missing-duration:
                            description: / Similar to the max-leader-missing-duration,
                              instead it will log warnings and / try to alert monitoring
                              systems, if there is any.
                            type: string
                          allow-remove-leader:
                            type: boolean
                          apply-max-batch-size:
                            format: int64
                            type: integer
                          apply-pool-size:
                            description: 'Optional: Defaults to 2'
                            format: int64
                            type: integer
                          clean-stale-peer-delay:
                            description: 'delay time before deleting a stale peer
                              Optional: Defaults to 10m'
                            type: string
                          cleanup-import-sst-interval:
                            description: 'Optional: Defaults to 10m'
                            type: string
                          consistency-check-interval:
                            description: 'Interval (ms) to check region whether the
                              data is consistent. Optional: Defaults to 0'
                            type: string
                          hibernate-regions:
                            type: boolean
                          leader-transfer-max-log-lag:
                            format: int64
                            type: integer
                          lock-cf-compact-bytes-threshold:
                            description: 'Optional: Defaults to 256MB'
                            type: string
                          lock-cf-compact-interval:
                            description: 'Optional: Defaults to 10m'
                            type: string
                          max-leader-missing-duration:
                            description: / If the leader of a peer is missing for
                              longer than max-leader-missing-duration / the peer would
                              ask pd to confirm whether it is valid in any region.
                              / If the peer is stale and is not valid in any region,
                              it will destroy itself.
                            type: string
                          max-peer-down-duration:
                            description: '/ When a peer is not active for max-peer-down-duration
                              / the peer is considered to be down and is reported
                              to PD. Optional: Defaults to 5m'
                            type: string
                          merge-check-tick-interval:
                            description: / Interval to re-propose merge.
                            type: string
                          merge-max-log-gap:
                            description: / Max log gap allowed to propose merge.
                            format: int64
                            type: integer
                          messages-per-tick:
                            format: int64
                            type: integer
                          notify-capacity:
                            format: int64
                            type: integer
                          pd-heartbeat-tick-interval:
                            description: 'Optional: Defaults to 60s'
                            type: string
                          pd-store-heartbeat-tick-interval:
                            description: 'Optional: Defaults to 10s'
                            type: string
                          peer-stale-state-check-interval:
                            type: string
                          prevote:
                            description: 'Optional: Defaults to true'
                            type: boolean
                          raft-base-tick-interval:
                            description: raft-base-tick-interval is a base tick interval
                              (ms).
                            type: string
                          raft-election-timeout-ticks:
                            format: int64
                            type: integer
                          raft-entry-cache-life-time:
                            description: When a peer is not responding for this time,
                              leader will not keep entry cache for it.
                            type: string
                          raft-entry-max-size:
                            description: 'When the entry exceed the max size, reject
                              to propose it. Optional: Defaults to 8MB'
                            type: string
                          raft-heartbeat-ticks:
                            format: int64
                            type: integer
                          raft-log-gc-count-limit:
                            description: 'When entry count exceed this value, gc will
                              be forced trigger. Optional: Defaults to 72000'
                            format: int64
                            type: integer
                          raft-log-gc-size-limit:
                            description: 'When the approximate size of raft log entries
                              exceed this value gc will be forced trigger. Optional:
                              Defaults to 72MB'
                            type: string
                          raft-log-gc-threshold:
                            description: 'A threshold to gc stale raft log, must >=
                              1. Optional: Defaults to 50'
                            format: int64
                            type: integer
                          raft-log-gc-tick-interval:
                            description: 'Interval to gc unnecessary raft log (ms).
                              Optional: Defaults to 10s'
                            type: string
                          raft-reject-transfer-leader-duration:
                            description: When a peer is newly added, reject transferring
                              leader to the peer for a while.
                            type: string
                          raft-store-max-leader-lease:
                            description: The lease provided by a successfully proposed
                              and applied entry.
                            type: string
                          region-compact-check-interval:
                            description: '/ Interval (ms) to check whether start compaction
                              for a region. Optional: Defaults to 5m'
                            type: string
                          region-compact-check-step:
                            description: '/ Number of regions for each time checking.
                              Optional: Defaults to 100'
                            format: int64
                            type: integer
                          region-compact-min-tombstones:
                            description: '/ Minimum number of tombstones to trigger
                              manual compaction. Optional: Defaults to 10000'
                            format: int64
                            type: integer
                          region-compact-tombstones-percent:
                            description: '/ Minimum percentage of tombstones to trigger
                              manual compaction. / Should between 1 and 100. Optional:
                              Defaults to 30'
                            format: int64
                            type: integer
                          region-split-check-diff:
                            description: '/ When size change of region exceed the
                              diff since last check, it / will be checked again whether
                              it should be split. Optional: Defaults to 6MB'
                            type: string
                          report-region-flow-interval:
                            type: string
                          right-derive-when-split:
                            description: Right region derive origin region id when
                              split.
                            type: boolean
                          snap-apply-batch-size:
                            type: string
                          snap-gc-timeout:
                            type: string
                          snap-mgr-gc-tick-interval:
                            type: string
                          split-region-check-tick-interval:
                            description: 'Interval (ms) to check region whether need
                              to be split or not. Optional: Defaults to 10s'
                            type: string
                          store-max-batch-size:
                            format: int64
                            type: integer
                          store-pool-size:
                            description: 'Optional: Defaults to 2'
                            format: int64
                            type: integer
                          sync-log:
                            description: 'true for high reliability, prevent data
                              loss when power failure. Optional: Defaults to true'
                            type: boolean
                          use-delete-range:
                            type: boolean
                        type: object
                      readpool:
                        properties:
                          coprocessor:
                            properties:
                              high-concurrency:
                                description: 'Optional: Defaults to 8'
                                format: int64
                                type: integer
                              low-concurrency:
                                description: 'Optional: Defaults to 8'
                                format: int64
                                type: integer
                              max-tasks-per-worker-high:
                                description: 'Optional: Defaults to 2000'
                                format: int64
                                type: integer
                              max-tasks-per-worker-low:
                                description: 'Optional: Defaults to 2000'
                                format: int64
                                type: integer
                              max-tasks-per-worker-normal:
                                description: 'Optional: Defaults to 2000'
                                format: int64
                                type: integer
                              normal-concurrency:
                                description: 'Optional: Defaults to 8'
                                format: int64
                                type: integer
                              stack-size:
                                description: 'Optional: Defaults to 10MB'
                                type: string
                            type: object
                          storage:
                            properties:
                              high-concurrency:
                                description: 'Optional: Defaults to 4'
                                format: int64
                                type: integer
                              low-concurrency:
                                description: 'Optional: Defaults to 4'
                                format: int64
                                type: integer
                              max-tasks-per-worker-high:
                                description: 'Optional: Defaults to 2000'
                                format: int64
                                type: integer
                              max-tasks-per-worker-low:
                                description: 'Optional: Defaults to 2000'
                                format: int64
                                type: integer
                              max-tasks-per-worker-normal:
                                description: 'Optional: Defaults to 2000'
                                format: int64
                                type: integer
                              normal-concurrency:
                                description: 'Optional: Defaults to 4'
                                format: int64
                                type: integer
                              stack-size:
                                description: 'Optional: Defaults to 10MB'
                                type: string
                            type: object
                          unified:
                            properties:
                              max-tasks-per-worker:
                                format: int32
                                type: integer
                              max-thread-count:
                                format: int32
                                type: integer
                              min-thread-count:
                                format: int32
                                type: integer
                              stack-size:
                                type: string
                            type: object
                        type: object
                      refresh-config-interval:
                        type: string
                      rocksdb:
                        description: TiKVDbConfig is the rocksdb config.
                        properties:
                          auto-tuned:
                            type: boolean
                          bytes-per-sync:
                            type: string
                          compaction-readahead-size:
                            description: 'Optional: Defaults to 0'
                            type: string
                          create-if-missing:
                            description: 'Optional: Defaults to true'
                            type: boolean
                          defaultcf:
                            description: TiKVCfConfig is the config of a cf
                            properties:
                              block-based-bloom-filter:
                                type: boolean
                              block-cache-size:
                                type: string
                              block-size:
                                type: string
                              bloom-filter-bits-per-key:
                                format: int64
                                type: integer
                              cache-index-and-filter-blocks:
                                type: boolean
                              compaction-pri:
                                format: int64
                                type: integer
                              compaction-style:
                                format: int64
                                type: integer
                              compression-per-level:
                                items:
                                  type: string
                                type: array
                              disable-auto-compactions:
                                type: boolean
                              disable-block-cache:
                                type: boolean
                              dynamic-level-bytes:
                                type: boolean
                              enable-doubly-skiplist:
                                type: boolean
                              force-consistency-checks:
                                type: boolean
                              hard-pending-compaction-bytes-limit:
                                type: string
                              level0-file-num-compaction-trigger:
                                format: int64
                                type: integer
                              level0-slowdown-writes-trigger:
                                format: int64
                                type: integer
                              level0-stop-writes-trigger:
                                format: int64
                                type: integer
                              max-bytes-for-level-base:
                                type: string
                              max-bytes-for-level-multiplier:
                                format: int64
                                type: integer
                              max-compaction-bytes:
                                type: string
                              max-write-buffer-number:
                                format: int64
                                type: integer
                              min-write-buffer-number-to-merge:
                                format: int64
                                type: integer
                              num-levels:
                                format: int64
                                type: integer
                              optimize-filters-for-hits:
                                type: boolean
                              pin-l0-filter-and-index-blocks:
                                type: boolean
                              prop-keys-index-distance:
                                format: int64
                                type: integer
                              prop-size-index-distance:
                                format: int64
                                type: integer
                              read-amp-bytes-per-bit:
                                format: int64
                                type: integer
                              soft-pending-compaction-bytes-limit:
                                type: string
                              target-file-size-base:
                                type: string
                              titan:
                                description: TiKVTitanCfConfig is the titian config.
                                properties:
                                  blob-cache-size:
                                    type: string
                                  blob-file-compression:
                                    type: string
                                  blob-run-mode:
                                    type: string
                                  discardable-ratio:
                                    type: number
                                  gc-merge-rewrite:
                                    description: optional
                                    type: boolean
                                  level_merge:
                                    description: optional
                                    type: boolean
                                  max-gc-batch-size:
                                    type: string
                                  merge-small-file-threshold:
                                    type: string
                                  min-blob-size:
                                    type: string
                                  min-gc-batch-size:
                                    type: string
                                  sample-ratio:
                                    type: number
                                type: object
                              use-bloom-filter:
                                type: boolean
                              whole-key-filtering:
                                type: boolean
                              write-buffer-size:
                                type: string
                            type: object
                          enable-pipelined-write:
                            type: boolean
                          enable-statistics:
                            description: 'Optional: Defaults to true'
                            type: boolean
                          info-log-dir:
                            type: string
                          info-log-keep-log-file-num:
                            format: int64
                            type: integer
                          info-log-max-size:
                            type: string
                          info-log-roll-time:
                            type: string
                          lockcf:
                            description: TiKVCfConfig is the config of a cf
                            properties:
                              block-based-bloom-filter:
                                type: boolean
                              block-cache-size:
                                type: string
                              block-size:
                                type: string
                              bloom-filter-bits-per-key:
                                format: int64
                                type: integer
                              cache-index-and-filter-blocks:
                                type: boolean
                              compaction-pri:
                                format: int64
                                type: integer
                              compaction-style:
                                format: int64
                                type: integer
                              compression-per-level:
                                items:
                                  type: string
                                type: array
                              disable-auto-compactions:
                                type: boolean
                              disable-block-cache:
                                type: boolean
                              dynamic-level-bytes:
                                type: boolean
                              enable-doubly-skiplist:
                                type: boolean
                              force-consistency-checks:
                                type: boolean
                              hard-pending-compaction-bytes-limit:
                                type: string
                              level0-file-num-compaction-trigger:
                                format: int64
                                type: integer
                              level0-slowdown-writes-trigger:
                                format: int64
                                type: integer
                              level0-stop-writes-trigger:
                                format: int64
                                type: integer
                              max-bytes-for-level-base:
                                type: string
                              max-bytes-for-level-multiplier:
                                format: int64
                                type: integer
                              max-compaction-bytes:
                                type: string
                              max-write-buffer-number:
                                format: int64
                                type: integer
                              min-write-buffer-number-to-merge:
                                format: int64
                                type: integer
                              num-levels:
                                format: int64
                                type: integer
                              optimize-filters-for-hits:
                                type: boolean
                              pin-l0-filter-and-index-blocks:
                                type: boolean
                              prop-keys-index-distance:
                                format: int64
                                type: integer
                              prop-size-index-distance:
                                format: int64
                                type: integer
                              read-amp-bytes-per-bit:
                                format: int64
                                type: integer
                              soft-pending-compaction-bytes-limit:
                                type: string
                              target-file-size-base:
                                type: string
                              titan:
                                description: TiKVTitanCfConfig is the titian config.
                                properties:
                                  blob-cache-size:
                                    type: string
                                  blob-file-compression:
                                    type: string
                                  blob-run-mode:
                                    type: string
                                  discardable-ratio:
                                    type: number
                                  gc-merge-rewrite:
                                    description: optional
                                    type: boolean
                                  level_merge:
                                    description: optional
                                    type: boolean
                                  max-gc-batch-size:
                                    type: string
                                  merge-small-file-threshold:
                                    type: string
                                  min-blob-size:
                                    type: string
                                  min-gc-batch-size:
                                    type: string
                                  sample-ratio:
                                    type: number
                                type: object
                              use-bloom-filter:
                                type: boolean
                              whole-key-filtering:
                                type: boolean
                              write-buffer-size:
                                type: string
                            type: object
                          max-background-jobs:
                            description: 'Optional: Defaults to 8'
                            format: int64
                            type: integer
                          max-manifest-file-size:
                            description: 'Optional: Defaults to 128MB'
                            type: string
                          max-open-files:
                            description: 'Optional: Defaults to 40960'
                            format: int64
                            type: integer
                          max-sub-compactions:
                            description: 'Optional: Defaults to 3'
                            format: int64
                            type: integer
                          max-total-wal-size:
                            description: 'Optional: Defaults to 4GB'
                            type: string
                          raftcf:
                            description: TiKVCfConfig is the config of a cf
                            properties:
                              block-based-bloom-filter:
                                type: boolean
                              block-cache-size:
                                type: string
                              block-size:
                                type: string
                              bloom-filter-bits-per-key:
                                format: int64
                                type: integer
                              cache-index-and-filter-blocks:
                                type: boolean
                              compaction-pri:
                                format: int64
                                type: integer
                              compaction-style:
                                format: int64
                                type: integer
                              compression-per-level:
                                items:
                                  type: string
                                type: array
                              disable-auto-compactions:
                                type: boolean
                              disable-block-cache:
                                type: boolean
                              dynamic-level-bytes:
                                type: boolean
                              enable-doubly-skiplist:
                                type: boolean
                              force-consistency-checks:
                                type: boolean
                              hard-pending-compaction-bytes-limit:
                                type: string
                              level0-file-num-compaction-trigger:
                                format: int64
                                type: integer
                              level0-slowdown-writes-trigger:
                                format: int64
                                type: integer
                              level0-stop-writes-trigger:
                                format: int64
                                type: integer
                              max-bytes-for-level-base:
                                type: string
                              max-bytes-for-level-multiplier:
                                format: int64
                                type: integer
                              max-compaction-bytes:
                                type: string
                              max-write-buffer-number:
                                format: int64
                                type: integer
                              min-write-buffer-number-to-merge:
                                format: int64
                                type: integer
                              num-levels:
                                format: int64
                                type: integer
                              optimize-filters-for-hits:
                                type: boolean
                              pin-l0-filter-and-index-blocks:
                                type: boolean
                              prop-keys-index-distance:
                                format: int64
                                type: integer
                              prop-size-index-distance:
                                format: int64
                                type: integer
                              read-amp-bytes-per-bit:
                                format: int64
                                type: integer
                              soft-pending-compaction-bytes-limit:
                                type: string
                              target-file-size-base:
                                type: string
                              titan:
                                description: TiKVTitanCfConfig is the titian config.
                                properties:
                                  blob-cache-size:
                                    type: string
                                  blob-file-compression:
                                    type: string
                                  blob-run-mode:
                                    type: string
                                  discardable-ratio:
                                    type: number
                                  gc-merge-rewrite:
                                    description: optional
                                    type: boolean
                                  level_merge:
                                    description: optional
                                    type: boolean
                                  max-gc-batch-size:
                                    type: string
                                  merge-small-file-threshold:
                                    type: string
                                  min-blob-size:
                                    type: string
                                  min-gc-batch-size:
                                    type: string
                                  sample-ratio:
                                    type: number
                                type: object
                              use-bloom-filter:
                                type: boolean
                              whole-key-filtering:
                                type: boolean
                              write-buffer-size:
                                type: string
                            type: object
                          rate-bytes-per-sec:
                            type: string
                          rate-limiter-mode:
                            format: int64
                            type: integer
                          stats-dump-period:
                            description: 'Optional: Defaults to 10m'
                            type: string
                          titan:
                            description: TiKVTitanDBConfig is the config a titian
                              db.
                            properties:
                              dirname:
                                type: string
                              disable-gc:
                                type: boolean
                              enabled:
                                type: boolean
                              max-background-gc:
                                format: int64
                                type: integer
                              purge-obsolete-files-period:
                                description: The value of this field will be truncated
                                  to seconds.
                                type: string
                            type: object
                          use-direct-io-for-flush-and-compaction:
                            type: boolean
                          wal-bytes-per-sync:
                            type: string
                          wal-recovery-mode:
                            description: 'Optional: Defaults to 2'
                            format: int64
                            type: integer
                          wal-size-limit:
                            type: string
                          wal-ttl-seconds:
                            format: int64
                            type: integer
                          writable-file-max-buffer-size:
                            type: string
                          writecf:
                            description: TiKVCfConfig is the config of a cf
                            properties:
                              block-based-bloom-filter:
                                type: boolean
                              block-cache-size:
                                type: string
                              block-size:
                                type: string
                              bloom-filter-bits-per-key:
                                format: int64
                                type: integer
                              cache-index-and-filter-blocks:
                                type: boolean
                              compaction-pri:
                                format: int64
                                type: integer
                              compaction-style:
                                format: int64
                                type: integer
                              compression-per-level:
                                items:
                                  type: string
                                type: array
                              disable-auto-compactions:
                                type: boolean
                              disable-block-cache:
                                type: boolean
                              dynamic-level-bytes:
                                type: boolean
                              enable-doubly-skiplist:
                                type: boolean
                              force-consistency-checks:
                                type: boolean
                              hard-pending-compaction-bytes-limit:
                                type: string
                              level0-file-num-compaction-trigger:
                                format: int64
                                type: integer
                              level0-slowdown-writes-trigger:
                                format: int64
                                type: integer
                              level0-stop-writes-trigger:
                                format: int64
                                type: integer
                              max-bytes-for-level-base:
                                type: string
                              max-bytes-for-level-multiplier:
                                format: int64
                                type: integer
                              max-compaction-bytes:
                                type: string
                              max-write-buffer-number:
                                format: int64
                                type: integer
                              min-write-buffer-number-to-merge:
                                format: int64
                                type: integer
                              num-levels:
                                format: int64
                                type: integer
                              optimize-filters-for-hits:
                                type: boolean
                              pin-l0-filter-and-index-blocks:
                                type: boolean
                              prop-keys-index-distance:
                                format: int64
                                type: integer
                              prop-size-index-distance:
                                format: int64
                                type: integer
                              read-amp-bytes-per-bit:
                                format: int64
                                type: integer
                              soft-pending-compaction-bytes-limit:
                                type: string
                              target-file-size-base:
                                type: string
                              titan:
                                description: TiKVTitanCfConfig is the titian config.
                                properties:
                                  blob-cache-size:
                                    type: string
                                  blob-file-compression:
                                    type: string
                                  blob-run-mode:
                                    type: string
                                  discardable-ratio:
                                    type: number
                                  gc-merge-rewrite:
                                    description: optional
                                    type: boolean
                                  level_merge:
                                    description: optional
                                    type: boolean
                                  max-gc-batch-size:
                                    type: string
                                  merge-small-file-threshold:
                                    type: string
                                  min-blob-size:
                                    type: string
                                  min-gc-batch-size:
                                    type: string
                                  sample-ratio:
                                    type: number
                                type: object
                              use-bloom-filter:
                                type: boolean
                              whole-key-filtering:
                                type: boolean
                              write-buffer-size:
                                type: string
                            type: object
                        type: object
                      security:
                        properties:
                          ca-path:
                            type: string
                          cert-allowed-cn:
                            description: CertAllowedCN is the Common Name that allowed
                            items:
                              type: string
                            type: array
                          cert-path:
                            type: string
                          cipher-file:
                            type: string
                          encryption:
                            properties:
                              data-encryption-method:
                                description: Encryption method to use for data files.
                                  Possible values are "plaintext", "aes128-ctr", "aes192-ctr"
                                  and "aes256-ctr". Value other than "plaintext" means
                                  encryption is enabled, in which case master key
                                  must be specified.
                                type: string
                              data-key-rotation-period:
                                description: Specifies how often TiKV rotates data
                                  encryption key.
                                type: string
                              master-key:
                                description: "Specifies master key if encryption is
                                  enabled. There are three types of master key: \n
                                  * \"plaintext\": \n Plaintext as master key means
                                  no master key is given and only applicable when
                                  encryption is not enabled, i.e. data-encryption-method
                                  = \"plaintext\". This type doesn't have sub-config
                                  items. Example: \n [security.encryption.master-key]
                                  type = \"plaintext\" \n * \"kms\": \n Use a KMS
                                  service to supply master key. Currently only AWS
                                  KMS is supported. This type of master key is recommended
                                  for production use. Example: \n [security.encryption.master-key]
                                  type = \"kms\" ## KMS CMK key id. Must be a valid
                                  KMS CMK where the TiKV process has access to. ##
                                  In production is recommended to grant access of
                                  the CMK to TiKV using IAM. key-id = \"1234abcd-12ab-34cd-56ef-1234567890ab\"
                                  ## AWS region of the KMS CMK. region = \"us-west-2\"
                                  ## (Optional) AWS KMS service endpoint. Only required
                                  when non-default KMS endpoint is ## desired. endpoint
                                  = \"https://kms.us-west-2.amazonaws.com\" \n * \"file\":
                                  \n Supply a custom encryption key stored in a file.
                                  It is recommended NOT to use in production, as it
                                  breaks the purpose of encryption at rest, unless
                                  the file is stored in tempfs. The file must contain
                                  a 256-bits (32 bytes, regardless of key length implied
                                  by data-encryption-method) key encoded as hex string
                                  and end with newline (\"\\n\"). Example: \n [security.encryption.master-key]
                                  type = \"file\" path = \"/path/to/master/key/file\""
                                properties:
                                  access-key:
                                    description: AccessKey of AWS user, leave empty
                                      if using other authrization method optional
                                    type: string
                                  endpoint:
                                    description: Used for KMS compatible KMS, such
                                      as Ceph, minio, If use AWS, leave empty optional
                                    type: string
                                  key-id:
                                    description: AWS CMK key-id it can be find in
                                      AWS Console or use aws cli This field is required
                                    type: string
                                  method:
                                    description: 'Encrypyion method, use master key
                                      encryption data key Possible values: plaintext,
                                      aes128-ctr, aes192-ctr, aes256-ctr Optional:
                                      Default to plaintext optional'
                                    type: string
                                  path:
                                    description: Text file containing the key in hex
                                      form, end with '\n'
                                    type: string
                                  region:
                                    description: 'Region of this KMS key Optional:
                                      Default to us-east-1 optional'
                                    type: string
                                  secret-access-key:
                                    description: SecretKey of AWS user, leave empty
                                      if using other authrization method optional
                                    type: string
                                  type:
                                    type: string
                                required:
                                - key-id
                                - path
                                type: object
                              previous-master-key:
                                description: Specifies the old master key when rotating
                                  master key. Same config format as master-key. The
                                  key is only access once during TiKV startup, after
                                  that TiKV do not need access to the key. And it
                                  is okay to leave the stale previous-master-key config
                                  after master key rotation.
                                properties:
                                  access-key:
                                    description: AccessKey of AWS user, leave empty
                                      if using other authrization method optional
                                    type: string
                                  endpoint:
                                    description: Used for KMS compatible KMS, such
                                      as Ceph, minio, If use AWS, leave empty optional
                                    type: string
                                  key-id:
                                    description: AWS CMK key-id it can be find in
                                      AWS Console or use aws cli This field is required
                                    type: string
                                  method:
                                    description: 'Encrypyion method, use master key
                                      encryption data key Possible values: plaintext,
                                      aes128-ctr, aes192-ctr, aes256-ctr Optional:
                                      Default to plaintext optional'
                                    type: string
                                  path:
                                    description: Text file containing the key in hex
                                      form, end with '\n'
                                    type: string
                                  region:
                                    description: 'Region of this KMS key Optional:
                                      Default to us-east-1 optional'
                                    type: string
                                  secret-access-key:
                                    description: SecretKey of AWS user, leave empty
                                      if using other authrization method optional
                                    type: string
                                  type:
                                    type: string
                                required:
                                - key-id
                                - path
                                type: object
                            type: object
                          key-path:
                            type: string
                          override-ssl-target:
                            type: string
                        type: object
                      server:
                        description: TiKVServerConfig is the configuration of TiKV
                          server.
                        properties:
                          concurrent-recv-snap-limit:
                            description: 'Optional: Defaults to 32'
                            type: integer
                          concurrent-send-snap-limit:
                            description: 'Optional: Defaults to 32'
                            type: integer
                          enable-request-batch:
                            type: boolean
                          end-point-batch-row-limit:
                            type: integer
                          end-point-enable-batch-if-possible:
                            type: integer
                          end-point-recursion-limit:
                            description: 'Optional: Defaults to 1000'
                            type: integer
                          end-point-request-max-handle-duration:
                            type: string
                          end-point-stream-batch-row-limit:
                            type: integer
                          end-point-stream-channel-size:
                            type: integer
                          grpc-compression-type:
                            description: 'Optional: Defaults to none'
                            type: string
                          grpc-concurrency:
                            description: 'Optional: Defaults to 4'
                            type: integer
                          grpc-concurrent-stream:
                            description: 'Optional: Defaults to 1024'
                            type: integer
                          grpc-keepalive-time:
                            description: 'Optional: Defaults to 10s'
                            type: string
                          grpc-keepalive-timeout:
                            description: 'Optional: Defaults to 3s'
                            type: string
                          grpc-memory-pool-quota:
                            description: 'Optional: Defaults to 32G'
                            type: string
                          grpc-raft-conn-num:
                            description: 'Optional: Defaults to 10'
                            type: integer
                          grpc-stream-initial-window-size:
                            description: 'Optional: Defaults to 2MB'
                            type: string
                          heavy-load-threshold:
                            type: integer
                          heavy-load-wait-duration:
                            description: 'Optional: Defaults to 60s'
                            type: string
                          labels:
                            additionalProperties:
                              type: string
                            type: object
                          request-batch-enable-cross-command:
                            type: boolean
                          request-batch-wait-duration:
                            type: string
                          snap-max-total-size:
                            type: string
                          snap-max-write-bytes-per-sec:
                            description: 'Optional: Defaults to 100MB'
                            type: string
                          stats-concurrency:
                            type: integer
                          status-thread-pool-size:
                            description: 'Optional: Defaults to 1'
                            type: string
                        type: object
                      slow-log-file:
                        type: string
                      slow-log-threshold:
                        type: string
                      storage:
                        description: TiKVStorageConfig is the config of storage
                        properties:
                          block-cache:
                            description: TiKVBlockCacheConfig is the config of a block
                              cache
                            properties:
                              capacity:
                                type: string
                              high-pri-pool-ratio:
                                type: number
                              memory-allocator:
                                type: string
                              num-shard-bits:
                                format: int64
                                type: integer
                              shared:
                                description: 'Optional: Defaults to true'
                                type: boolean
                              strict-capacity-limit:
                                type: boolean
                            type: object
                          max-key-size:
                            format: int64
                            type: integer
                          reserve-space:
                            description: The size of the temporary file that preoccupies
                              the extra space when TiKV is started. The name of temporary
                              file is `space_placeholder_file`, located in the `storage.data-dir`
                              directory. When TiKV runs out of disk space and cannot
                              be started normally, you can delete this file as an
                              emergency intervention and set it to `0MB`. Default
                              value is 2GB.
                            type: string
                          scheduler-concurrency:
                            description: 'Optional: Defaults to 2048000'
                            format: int64
                            type: integer
                          scheduler-notify-capacity:
                            format: int64
                            type: integer
                          scheduler-pending-write-threshold:
                            description: 'Optional: Defaults to 100MB'
                            type: string
                          scheduler-worker-pool-size:
                            description: 'Optional: Defaults to 4'
                            format: int64
                            type: integer
                        type: object
                    type: object
                  configUpdateStrategy:
                    description: 'ConfigUpdateStrategy of the component. Override
                      the cluster-level updateStrategy if present Optional: Defaults
                      to cluster-level setting'
                    type: string
                  env:
                    description: List of environment variables to set in the container,
                      like v1.Container.Env.
                    items:
                      description: EnvVar represents an environment variable present
                        in a Container.
                      properties:
                        name:
                          description: Name of the environment variable. Must be a
                            C_IDENTIFIER.
                          type: string
                        value:
                          description: 'Variable references $(VAR_NAME) are expanded
                            using the previous defined environment variables in the
                            container and any service environment variables. If a
                            variable cannot be resolved, the reference in the input
                            string will be unchanged. The $(VAR_NAME) syntax can be
                            escaped with a double $$, ie: $$(VAR_NAME). Escaped references
                            will never be expanded, regardless of whether the variable
                            exists or not. Defaults to "".'
                          type: string
                        valueFrom:
                          description: Source for the environment variable's value.
                            Cannot be used if value is not empty.
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            fieldRef:
                              description: 'Selects a field of the pod: supports metadata.name,
                                metadata.namespace, metadata.labels, metadata.annotations,
                                spec.nodeName, spec.serviceAccountName, status.hostIP,
                                status.podIP.'
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                            resourceFieldRef:
                              description: 'Selects a resource of the container: only
                                resources limits and requests (limits.cpu, limits.memory,
                                limits.ephemeral-storage, requests.cpu, requests.memory
                                and requests.ephemeral-storage) are currently supported.'
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  hostNetwork:
                    description: 'Whether Hostnetwork of the component is enabled.
                      Override the cluster-level setting if present Optional: Defaults
                      to cluster-level setting'
                    type: boolean
                  image:
                    description: Image of the component, override baseImage and version
                      if present Deprecated
                    type: string
                  imagePullPolicy:
                    description: 'ImagePullPolicy of the component. Override the cluster-level
                      imagePullPolicy if present Optional: Defaults to cluster-level
                      setting'
                    type: string
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                    type: object
                  maxFailoverCount:
                    description: 'MaxFailoverCount limit the max replicas could be
                      added in failover, 0 means no failover Optional: Defaults to
                      3'
                    format: int32
                    minimum: 0
                    type: integer
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: 'NodeSelector of the component. Merged into the cluster-level
                      nodeSelector if non-empty Optional: Defaults to cluster-level
                      setting'
                    type: object
                  podSecurityContext:
                    description: PodSecurityContext of the component
                    properties:
                      fsGroup:
                        description: "A special supplemental group that applies to
                          all containers in a pod. Some volume types allow the Kubelet
                          to change the ownership of that volume to be owned by the
                          pod: \n 1. The owning GID will be the FSGroup 2. The setgid
                          bit is set (new files created in the volume will be owned
                          by FSGroup) 3. The permission bits are OR'd with rw-rw----
                          \n If unset, the Kubelet will not modify the ownership and
                          permissions of any volume."
                        format: int64
                        type: integer
                      runAsGroup:
                        description: The GID to run the entrypoint of the container
                          process. Uses runtime default if unset. May also be set
                          in SecurityContext.  If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext
                          takes precedence for that container.
                        format: int64
                        type: integer
                      runAsNonRoot:
                        description: Indicates that the container must run as a non-root
                          user. If true, the Kubelet will validate the image at runtime
                          to ensure that it does not run as UID 0 (root) and fail
                          to start the container if it does. If unset or false, no
                          such validation will be performed. May also be set in SecurityContext.  If
                          set in both SecurityContext and PodSecurityContext, the
                          value specified in SecurityContext takes precedence.
                        type: boolean
                      runAsUser:
                        description: The UID to run the entrypoint of the container
                          process. Defaults to user specified in image metadata if
                          unspecified. May also be set in SecurityContext.  If set
                          in both SecurityContext and PodSecurityContext, the value
                          specified in SecurityContext takes precedence for that container.
                        format: int64
                        type: integer
                      seLinuxOptions:
                        description: The SELinux context to be applied to all containers.
                          If unspecified, the container runtime will allocate a random
                          SELinux context for each container.  May also be set in
                          SecurityContext.  If set in both SecurityContext and PodSecurityContext,
                          the value specified in SecurityContext takes precedence
                          for that container.
                        properties:
                          level:
                            description: Level is SELinux level label that applies
                              to the container.
                            type: string
                          role:
                            description: Role is a SELinux role label that applies
                              to the container.
                            type: string
                          type:
                            description: Type is a SELinux type label that applies
                              to the container.
                            type: string
                          user:
                            description: User is a SELinux user label that applies
                              to the container.
                            type: string
                        type: object
                      supplementalGroups:
                        description: A list of groups applied to the first process
                          run in each container, in addition to the container's primary
                          GID.  If unspecified, no groups will be added to any container.
                        items:
                          format: int64
                          type: integer
                        type: array
                      sysctls:
                        description: Sysctls hold a list of namespaced sysctls used
                          for the pod. Pods with unsupported sysctls (by the container
                          runtime) might fail to launch.
                        items:
                          description: Sysctl defines a kernel parameter to be set
                          properties:
                            name:
                              description: Name of a property to set
                              type: string
                            value:
                              description: Value of a property to set
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      windowsOptions:
                        description: The Windows specific settings applied to all
                          containers. If unspecified, the options within a container's
                          SecurityContext will be used. If set in both SecurityContext
                          and PodSecurityContext, the value specified in SecurityContext
                          takes precedence.
                        properties:
                          gmsaCredentialSpec:
                            description: GMSACredentialSpec is where the GMSA admission
                              webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                              inlines the contents of the GMSA credential spec named
                              by the GMSACredentialSpecName field. This field is alpha-level
                              and is only honored by servers that enable the WindowsGMSA
                              feature flag.
                            type: string
                          gmsaCredentialSpecName:
                            description: GMSACredentialSpecName is the name of the
                              GMSA credential spec to use. This field is alpha-level
                              and is only honored by servers that enable the WindowsGMSA
                              feature flag.
                            type: string
                          runAsUserName:
                            description: The UserName in Windows to run the entrypoint
                              of the container process. Defaults to the user specified
                              in image metadata if unspecified. May also be set in
                              PodSecurityContext. If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext
                              takes precedence. This field is alpha-level and it is
                              only honored by servers that enable the WindowsRunAsUserName
                              feature flag.
                            type: string
                        type: object
                    type: object
                  priorityClassName:
                    description: 'PriorityClassName of the component. Override the
                      cluster-level one if present Optional: Defaults to cluster-level
                      setting'
                    type: string
                  privileged:
                    description: 'Whether create the TiKV container in privileged
                      mode, it is highly discouraged to enable this in critical environment.
                      Optional: defaults to false'
                    type: boolean
                  replicas:
                    description: The desired ready replicas
                    format: int32
                    minimum: 1
                    type: integer
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                    type: object
                  schedulerName:
                    description: 'SchedulerName of the component. Override the cluster-level
                      one if present Optional: Defaults to cluster-level setting'
                    type: string
                  serviceAccount:
                    description: Specify a Service Account for tikv
                    type: string
                  storageClassName:
                    description: The storageClassName of the persistent volume for
                      TiKV data storage. Defaults to Kubernetes default storage class.
                    type: string
                  tolerations:
                    description: 'Tolerations of the component. Override the cluster-level
                      tolerations if non-empty Optional: Defaults to cluster-level
                      setting'
                    items:
                      description: The pod this Toleration is attached to tolerates
                        any taint that matches the triple <key,value,effect> using
                        the matching operator <operator>.
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match.
                            Empty means match all taint effects. When specified, allowed
                            values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies
                            to. Empty means match all taint keys. If the key is empty,
                            operator must be Exists; this combination means to match
                            all values and all keys.
                          type: string
                        operator:
                          description: Operator represents a key's relationship to
                            the value. Valid operators are Exists and Equal. Defaults
                            to Equal. Exists is equivalent to wildcard for value,
                            so that a pod can tolerate all taints of a particular
                            category.
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of
                            time the toleration (which must be of effect NoExecute,
                            otherwise this field is ignored) tolerates the taint.
                            By default, it is not set, which means tolerate the taint
                            forever (do not evict). Zero and negative values will
                            be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches
                            to. If the operator is Exists, the value should be empty,
                            otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                  version:
                    description: 'Version of the component. Override the cluster-level
                      version if non-empty Optional: Defaults to cluster-level setting'
                    type: string
                required:
                - replicas
                type: object
              timezone:
                description: 'Time zone of TiDB cluster Pods Optional: Defaults to
                  UTC'
                type: string
              tolerations:
                description: Base tolerations of TiDB cluster Pods, components may
                  add more tolerations upon this respectively
                items:
                  description: The pod this Toleration is attached to tolerates any
                    taint that matches the triple <key,value,effect> using the matching
                    operator <operator>.
                  properties:
                    effect:
                      description: Effect indicates the taint effect to match. Empty
                        means match all taint effects. When specified, allowed values
                        are NoSchedule, PreferNoSchedule and NoExecute.
                      type: string
                    key:
                      description: Key is the taint key that the toleration applies
                        to. Empty means match all taint keys. If the key is empty,
                        operator must be Exists; this combination means to match all
                        values and all keys.
                      type: string
                    operator:
                      description: Operator represents a key's relationship to the
                        value. Valid operators are Exists and Equal. Defaults to Equal.
                        Exists is equivalent to wildcard for value, so that a pod
                        can tolerate all taints of a particular category.
                      type: string
                    tolerationSeconds:
                      description: TolerationSeconds represents the period of time
                        the toleration (which must be of effect NoExecute, otherwise
                        this field is ignored) tolerates the taint. By default, it
                        is not set, which means tolerate the taint forever (do not
                        evict). Zero and negative values will be treated as 0 (evict
                        immediately) by the system.
                      format: int64
                      type: integer
                    value:
                      description: Value is the taint value the toleration matches
                        to. If the operator is Exists, the value should be empty,
                        otherwise just a regular string.
                      type: string
                  type: object
                type: array
              version:
                description: Cluster version
                type: string
            required:
            - listenersConfig
            - pd
            - tikv
            type: object
          status:
            description: Most recently observed status of the tikv cluster
            properties:
              clusterID:
                type: string
              conditions:
                description: Represents the latest available observations of a tikv
                  cluster's state.
                items:
                  description: TikvClusterCondition describes the state of a tikv
                    cluster at a certain point.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    lastUpdateTime:
                      description: The last time this condition was updated.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of the condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              pd:
                description: PDStatus is PD status
                properties:
                  failureMembers:
                    additionalProperties:
                      description: PDFailureMember is the pd failure member information
                      properties:
                        createdAt:
                          format: date-time
                          type: string
                        memberDeleted:
                          type: boolean
                        memberID:
                          type: string
                        podName:
                          type: string
                        pvcUID:
                          description: UID is a type that holds unique ID values,
                            including UUIDs.  Because we don't ONLY use UUIDs, this
                            is an alias to string.  Being a type captures intent and
                            helps make sure that UIDs and names do not get conflated.
                          type: string
                      type: object
                    type: object
                  image:
                    type: string
                  leader:
                    description: PDMember is PD member
                    properties:
                      clientURL:
                        type: string
                      health:
                        type: boolean
                      id:
                        description: member id is actually a uint64, but apimachinery's
                          json only treats numbers as int64/float64 so uint64 may
                          overflow int64 and thus convert to float64
                        type: string
                      lastTransitionTime:
                        description: Last time the health transitioned from one to
                          another.
                        format: date-time
                        type: string
                      name:
                        type: string
                    required:
                    - clientURL
                    - health
                    - id
                    - name
                    type: object
                  members:
                    additionalProperties:
                      description: PDMember is PD member
                      properties:
                        clientURL:
                          type: string
                        health:
                          type: boolean
                        id:
                          description: member id is actually a uint64, but apimachinery's
                            json only treats numbers as int64/float64 so uint64 may
                            overflow int64 and thus convert to float64
                          type: string
                        lastTransitionTime:
                          description: Last time the health transitioned from one
                            to another.
                          format: date-time
                          type: string
                        name:
                          type: string
                      required:
                      - clientURL
                      - health
                      - id
                      - name
                      type: object
                    type: object
                  phase:
                    description: MemberPhase is the current state of member
                    type: string
                  statefulSet:
                    description: StatefulSetStatus represents the current state of
                      a StatefulSet.
                    properties:
                      collisionCount:
                        description: collisionCount is the count of hash collisions
                          for the StatefulSet. The StatefulSet controller uses this
                          field as a collision avoidance mechanism when it needs to
                          create the name for the newest ControllerRevision.
                        format: int32
                        type: integer
                      conditions:
                        description: Represents the latest available observations
                          of a statefulset's current state.
                        items:
                          description: StatefulSetCondition describes the state of
                            a statefulset at a certain point.
                          properties:
                            lastTransitionTime:
                              description: Last time the condition transitioned from
                                one status to another.
                              format: date-time
                              type: string
                            message:
                              description: A human readable message indicating details
                                about the transition.
                              type: string
                            reason:
                              description: The reason for the condition's last transition.
                              type: string
                            status:
                              description: Status of the condition, one of True, False,
                                Unknown.
                              type: string
                            type:
                              description: Type of statefulset condition.
                              type: string
                          required:
                          - status
                          - type
                          type: object
                        type: array
                      currentReplicas:
                        description: currentReplicas is the number of Pods created
                          by the StatefulSet controller from the StatefulSet version
                          indicated by currentRevision.
                        format: int32
                        type: integer
                      currentRevision:
                        description: currentRevision, if not empty, indicates the
                          version of the StatefulSet used to generate Pods in the
                          sequence [0,currentReplicas).
                        type: string
                      observedGeneration:
                        description: observedGeneration is the most recent generation
                          observed for this StatefulSet. It corresponds to the StatefulSet's
                          generation, which is updated on mutation by the API Server.
                        format: int64
                        type: integer
                      readyReplicas:
                        description: readyReplicas is the number of Pods created by
                          the StatefulSet controller that have a Ready Condition.
                        format: int32
                        type: integer
                      replicas:
                        description: replicas is the number of Pods created by the
                          StatefulSet controller.
                        format: int32
                        type: integer
                      updateRevision:
                        description: updateRevision, if not empty, indicates the version
                          of the StatefulSet used to generate Pods in the sequence
                          [replicas-updatedReplicas,replicas)
                        type: string
                      updatedReplicas:
                        description: updatedReplicas is the number of Pods created
                          by the StatefulSet controller from the StatefulSet version
                          indicated by updateRevision.
                        format: int32
                        type: integer
                    required:
                    - replicas
                    type: object
                  synced:
                    type: boolean
                  unjoinedMembers:
                    additionalProperties:
                      description: UnjoinedMember is the pd unjoin cluster member
                        information
                      properties:
                        createdAt:
                          format: date-time
                          type: string
                        podName:
                          type: string
                        pvcUID:
                          description: UID is a type that holds unique ID values,
                            including UUIDs.  Because we don't ONLY use UUIDs, this
                            is an alias to string.  Being a type captures intent and
                            helps make sure that UIDs and names do not get conflated.
                          type: string
                      type: object
                    type: object
                type: object
              tikv:
                description: TiKVStatus is TiKV status
                properties:
                  failureStores:
                    additionalProperties:
                      description: TiKVFailureStore is the tikv failure store information
                      properties:
                        createdAt:
                          format: date-time
                          type: string
                        podName:
                          type: string
                        storeID:
                          type: string
                      type: object
                    type: object
                  image:
                    type: string
                  phase:
                    description: MemberPhase is the current state of member
                    type: string
                  statefulSet:
                    description: StatefulSetStatus represents the current state of
                      a StatefulSet.
                    properties:
                      collisionCount:
                        description: collisionCount is the count of hash collisions
                          for the StatefulSet. The StatefulSet controller uses this
                          field as a collision avoidance mechanism when it needs to
                          create the name for the newest ControllerRevision.
                        format: int32
                        type: integer
                      conditions:
                        description: Represents the latest available observations
                          of a statefulset's current state.
                        items:
                          description: StatefulSetCondition describes the state of
                            a statefulset at a certain point.
                          properties:
                            lastTransitionTime:
                              description: Last time the condition transitioned from
                                one status to another.
                              format: date-time
                              type: string
                            message:
                              description: A human readable message indicating details
                                about the transition.
                              type: string
                            reason:
                              description: The reason for the condition's last transition.
                              type: string
                            status:
                              description: Status of the condition, one of True, False,
                                Unknown.
                              type: string
                            type:
                              description: Type of statefulset condition.
                              type: string
                          required:
                          - status
                          - type
                          type: object
                        type: array
                      currentReplicas:
                        description: currentReplicas is the number of Pods created
                          by the StatefulSet controller from the StatefulSet version
                          indicated by currentRevision.
                        format: int32
                        type: integer
                      currentRevision:
                        description: currentRevision, if not empty, indicates the
                          version of the StatefulSet used to generate Pods in the
                          sequence [0,currentReplicas).
                        type: string
                      observedGeneration:
                        description: observedGeneration is the most recent generation
                          observed for this StatefulSet. It corresponds to the StatefulSet's
                          generation, which is updated on mutation by the API Server.
                        format: int64
                        type: integer
                      readyReplicas:
                        description: readyReplicas is the number of Pods created by
                          the StatefulSet controller that have a Ready Condition.
                        format: int32
                        type: integer
                      replicas:
                        description: replicas is the number of Pods created by the
                          StatefulSet controller.
                        format: int32
                        type: integer
                      updateRevision:
                        description: updateRevision, if not empty, indicates the version
                          of the StatefulSet used to generate Pods in the sequence
                          [replicas-updatedReplicas,replicas)
                        type: string
                      updatedReplicas:
                        description: updatedReplicas is the number of Pods created
                          by the StatefulSet controller from the StatefulSet version
                          indicated by updateRevision.
                        format: int32
                        type: integer
                    required:
                    - replicas
                    type: object
                  stores:
                    additionalProperties:
                      description: TiKVStores is either Up/Down/Offline/Tombstone
                      properties:
                        id:
                          description: store id is also uint64, due to the same reason
                            as pd id, we store id as string
                          type: string
                        ip:
                          type: string
                        lastHeartbeatTime:
                          format: date-time
                          type: string
                        lastTransitionTime:
                          description: Last time the health transitioned from one
                            to another.
                          format: date-time
                          type: string
                        leaderCount:
                          format: int32
                          type: integer
                        podName:
                          type: string
                        state:
                          type: string
                      required:
                      - id
                      - ip
                      - lastHeartbeatTime
                      - leaderCount
                      - podName
                      - state
                      type: object
                    type: object
                  synced:
                    type: boolean
                  tombstoneStores:
                    additionalProperties:
                      description: TiKVStores is either Up/Down/Offline/Tombstone
                      properties:
                        id:
                          description: store id is also uint64, due to the same reason
                            as pd id, we store id as string
                          type: string
                        ip:
                          type: string
                        lastHeartbeatTime:
                          format: date-time
                          type: string
                        lastTransitionTime:
                          description: Last time the health transitioned from one
                            to another.
                          format: date-time
                          type: string
                        leaderCount:
                          format: int32
                          type: integer
                        podName:
                          type: string
                        state:
                          type: string
                      required:
                      - id
                      - ip
                      - lastHeartbeatTime
                      - leaderCount
                      - podName
                      - state
                      type: object
                    type: object
                type: object
            type: object
        required:
        - metadata
        - spec
        - status
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
